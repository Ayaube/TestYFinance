[
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/development/reporting_bug.rst.txt",
    "html": "********************************\nReporting a Bug\n********************************\n\nOpen a new issue on our `GitHub <https://github.com/ranaroussi/yfinance/issues>`_."
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/development/documentation.rst.txt",
    "html": "*************************************\nContribution to the documentation\n*************************************\n\n.. contents:: Documentation:\n   :local:\n\nAbout documentation\n------------------------\n* yfinance documentation is written in reStructuredText (rst) and built using Sphinx.\n* The documentation file is in `doc/source/..`.\n* Most of the notes under API References read from class and methods docstrings. These documentations, found in `doc/source/reference/api` is autogenerated by Sphinx and not included in git.\n\nBuilding documentation locally\n-------------------------------\nTo build the documentation locally, follow these steps:\n\n1. **Install Required Dependencies**:\n\n   * Make sure `Sphinx` and any other dependencies are installed. If a `requirements.txt` file is available, you can install dependencies by running:\n   \n   .. code-block:: console\n\n      pip install -r requirements.txt\n   \n\n2. **Build with Sphinx**:\n    \n   * After dependencies are installed, use the sphinx-build command to generate HTML documentation. \n   * Go to `doc/` directory Run:\n\n   .. code-block:: console\n\n      make clean && make html \n\n3. **View Documentation Locally**:\n\n   * Open `doc/build/html/index.html` in the browser to view the generated documentation.\n\nBuilding documentation on main \n-------------------------------\nThe documentation updates are built on merge to `main` branch. This is done via GitHub Actions workflow based on `/yfinance/.github/workflows/deploy_doc.yml`.\n\n1. Reivew the changes locally and push to `dev`.\n\n2. When `dev` gets merged to `main`, GitHub Actions workflow is automated to build documentation."
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/development/contributing.rst.txt",
    "html": "********************************\nContributiong to yfinance\n********************************\n\n`yfinance` relies on the community to investigate bugs and contribute code. Here’s how you can help:\n\nContributing\n------------\n\n1. Fork the repository on GitHub.\n2. Clone your forked repository:\n\n   .. code-block:: bash\n\n      git clone https://github.com/your-username/yfinance.git\n\n3. Create a new branch for your feature or bug fix:\n\n   .. code-block:: bash\n\n      git checkout -b feature-branch-name\n\n4. Make your changes, commit them, and push your branch to GitHub. To keep the commit history and `network graph <https://github.com/ranaroussi/yfinance/network>`_ compact:\n\n   Use short summaries for commits\n\n   .. code-block:: shell\n\n      git commit -m \"short summary\" -m \"full commit message\"\n\n   **Squash** tiny or negligible commits with meaningful ones.\n\n   .. code-block:: shell\n\n      git rebase -i HEAD~2\n      git push --force-with-lease origin <branch-name>\n\n5. Open a pull request on the `yfinance` GitHub page.\n\nFor more information, see the `Developer Guide <https://github.com/ranaroussi/yfinance/discussions/1084>`_.\n\nBranches\n---------\n\nTo support rapid development without breaking stable versions, this project uses a two-layer branch model:\n\n.. image:: assets/branches.png\n   :alt: Branching Model\n\n`Inspiration <https://miro.medium.com/max/700/1*2YagIpX6LuauC3ASpwHekg.png>`_\n\n- **dev**: New features and some bug fixes are merged here. This branch allows collective testing, conflict resolution, and further stabilization before merging into the stable branch.\n- **main**: Stable branch where PIP releases are created.\n\nBy default, branches target **main**, but most contributions should target **dev**. \n\n**Exceptions**:\nDirect merges to **main** are allowed if:\n\n- `yfinance` is massively broken\n- Part of `yfinance` is broken, and the fix is simple and isolated\n\nUnit Tests\n----------\n\nTests are written using Python’s `unittest` module. Here are some ways to run tests:\n\n- **Run all price tests**:\n\n  .. code-block:: shell\n\n     python -m unittest tests.test_prices\n\n- **Run a subset of price tests**:\n\n  .. code-block:: shell\n\n     python -m unittest tests.test_prices.TestPriceRepair\n\n- **Run a specific test**:\n\n  .. code-block:: shell\n\n     python -m unittest tests.test_prices.TestPriceRepair.test_ticker_missing\n\n- **Run all tests**:\n\n  .. code-block:: shell\n\n     python -m unittest discover -s tests\n\nRebasing\n--------------\n\nIf asked to move your branch from **main** to **dev**:\n\n1. Ensure all relevant branches are pulled.\n2. Run:\n\n   .. code-block:: shell\n\n      git checkout <your-branch>\n      git rebase --onto dev main <branch-name>\n      git push --force-with-lease origin <branch-name>\n\nRunning the GitHub Version of yfinance\n--------------------------------------\n\nTo download and run a GitHub version of `yfinance`, refer to `GitHub discussion <https://github.com/ranaroussi/yfinance/discussions/1080>`_"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.price_history.rst.txt",
    "html": "====================\n`PriceHistory` class\n====================\n\n.. currentmodule:: yfinance.scrapers.history\n\n.. autoclass:: PriceHistory\n   :members:\n   :undoc-members:"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.scrapers.funds.FundsData.rst.txt",
    "html": ":orphan:\n\nFundsData\n=========\n\n.. currentmodule:: yfinance.scrapers.funds\n\n.. autoclass:: FundsData\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: asset_classes\n      :noindex:\n   .. autoattribute:: bond_holdings\n      :noindex:\n   .. autoattribute:: bond_ratings\n      :noindex:\n   .. autoattribute:: description\n      :noindex:\n   .. autoattribute:: equity_holdings\n      :noindex:\n   .. autoattribute:: fund_operations\n      :noindex:\n   .. autoattribute:: fund_overview\n      :noindex:\n   .. autoattribute:: sector_weightings\n      :noindex:\n   .. autoattribute:: top_holdings\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   .. automethod:: quote_type\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.funds_data.rst.txt",
    "html": "====================\n`FundsData` class\n====================\n\n.. currentmodule:: yfinance.scrapers.funds\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   FundsData\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.set_tz_cache_location.rst.txt",
    "html": "yfinance.set\\_tz\\_cache\\_location\n=================================\n\n.. currentmodule:: yfinance\n\n.. autofunction:: set_tz_cache_location"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.enable_debug_mode.rst.txt",
    "html": "yfinance.enable\\_debug\\_mode\n============================\n\n.. currentmodule:: yfinance\n\n.. autofunction:: enable_debug_mode"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.download.rst.txt",
    "html": "yfinance.download\n=================\n\n.. currentmodule:: yfinance\n\n.. autofunction:: download"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.functions.rst.txt",
    "html": "=========================\nFunctions and Utilities\n=========================\n\n.. currentmodule:: yfinance\n   \nDownload Market Data\n~~~~~~~~~~~~~~~~~~~~~\nThe `download` function allows you to retrieve market data for multiple tickers at once.\n\n.. autosummary:: \n   :toctree: api/\n\n   download\n\nEnable Debug Mode\n~~~~~~~~~~~~~~~~~\nEnables logging of debug information for the `yfinance` package.\n\n.. autosummary:: \n   :toctree: api/\n\n   enable_debug_mode\n\nSet Timezone Cache Location\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSets the cache location for timezone data.\n\n.. autosummary:: \n   :toctree: api/\n\n   set_tz_cache_location\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.screen.rst.txt",
    "html": "yfinance.screen\n===============\n\n.. currentmodule:: yfinance\n\n.. autofunction:: screen"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.FundQuery.rst.txt",
    "html": ":orphan:\n\nFundQuery\n=========\n\n.. currentmodule:: yfinance\n\n.. autoclass:: FundQuery\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: valid_fields\n      :noindex:\n   .. autoattribute:: valid_values\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   .. automethod:: to_dict\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.EquityQuery.rst.txt",
    "html": ":orphan:\n\nEquityQuery\n===========\n\n.. currentmodule:: yfinance\n\n.. autoclass:: EquityQuery\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: valid_fields\n      :noindex:\n   .. autoattribute:: valid_values\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   .. automethod:: to_dict\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.screener.rst.txt",
    "html": "=========================\nScreener & Query\n=========================\n\n.. currentmodule:: yfinance\n\nQuery Market Data\n~~~~~~~~~~~~~~~~~~~~~\nThe `Sector` and `Industry` modules allow you to access the sector and industry information.\n\n.. autosummary:: \n   :toctree: api/\n\n   EquityQuery\n   FundQuery\n   screen\n\n.. seealso::\n   :attr:`EquityQuery.valid_fields <yfinance.EquityQuery.valid_fields>`\n      supported operand values for query\n   :attr:`EquityQuery.valid_values <yfinance.EquityQuery.valid_values>`\n      supported `EQ query operand parameters`\n   :attr:`FundQuery.valid_fields <yfinance.FundQuery.valid_fields>`\n      supported operand values for query\n   :attr:`FundQuery.valid_values <yfinance.FundQuery.valid_values>`\n      supported `EQ query operand parameters`\n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Sector.rst.txt",
    "html": ":orphan:\n\nSector\n======\n\n.. currentmodule:: yfinance\n\n.. autoclass:: Sector\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: industries\n      :noindex:\n   .. autoattribute:: key\n      :noindex:\n   .. autoattribute:: name\n      :noindex:\n   .. autoattribute:: overview\n      :noindex:\n   .. autoattribute:: research_reports\n      :noindex:\n   .. autoattribute:: symbol\n      :noindex:\n   .. autoattribute:: ticker\n      :noindex:\n   .. autoattribute:: top_companies\n      :noindex:\n   .. autoattribute:: top_etfs\n      :noindex:\n   .. autoattribute:: top_mutual_funds\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Industry.rst.txt",
    "html": ":orphan:\n\nIndustry\n========\n\n.. currentmodule:: yfinance\n\n.. autoclass:: Industry\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: key\n      :noindex:\n   .. autoattribute:: name\n      :noindex:\n   .. autoattribute:: overview\n      :noindex:\n   .. autoattribute:: research_reports\n      :noindex:\n   .. autoattribute:: sector_key\n      :noindex:\n   .. autoattribute:: sector_name\n      :noindex:\n   .. autoattribute:: symbol\n      :noindex:\n   .. autoattribute:: ticker\n      :noindex:\n   .. autoattribute:: top_companies\n      :noindex:\n   .. autoattribute:: top_growth_companies\n      :noindex:\n   .. autoattribute:: top_performing_companies\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.sector_industry.rst.txt",
    "html": "=======================\nSector and Industry\n=======================\n\n.. currentmodule:: yfinance\n\nSector class\n--------------\nThe `Sector` and `Industry` modules provide access to the Sector and Industry information.\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   Sector\n   Industry\n\n.. seealso::\n   :attr:`Sector.industries <yfinance.Sector.industries>`\n      Map of sector and industry\n\nSample Code\n---------------------\nTo initialize, use the relevant sector or industry key as below.\n\n.. literalinclude:: examples/sector_industry.py\n   :language: python\n\nThe modules can be chained with Ticker as below.\n\n.. literalinclude:: examples/sector_industry_ticker.py\n   :language: python\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Search.rst.txt",
    "html": ":orphan:\n\nSearch\n======\n\n.. currentmodule:: yfinance\n\n.. autoclass:: Search\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: all\n      :noindex:\n   .. autoattribute:: lists\n      :noindex:\n   .. autoattribute:: nav\n      :noindex:\n   .. autoattribute:: news\n      :noindex:\n   .. autoattribute:: quotes\n      :noindex:\n   .. autoattribute:: research\n      :noindex:\n   .. autoattribute:: response\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   .. automethod:: search\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.search.rst.txt",
    "html": "=====================\nSearch & News\n=====================\n\n.. currentmodule:: yfinance\n\n\nClass\n------------\nThe `Search` module, allows you to access search data in a Pythonic way.\n\n.. autosummary::\n   :toctree: api/\n\n   Search\n\nSearch Sample Code\n------------------\nThe `Search` module, allows you to access search data in a Pythonic way.\n\n.. literalinclude:: examples/search.py\n   :language: python\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.mutualfund_holders.rst.txt",
    "html": "yfinance.Ticker.mutualfund\\_holders\n===================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.mutualfund_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_mutualfund_holders.rst.txt",
    "html": "yfinance.Ticker.get\\_mutualfund\\_holders\n========================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_mutualfund_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.institutional_holders.rst.txt",
    "html": "yfinance.Ticker.institutional\\_holders\n======================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.institutional_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_institutional_holders.rst.txt",
    "html": "yfinance.Ticker.get\\_institutional\\_holders\n===========================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_institutional_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.major_holders.rst.txt",
    "html": "yfinance.Ticker.major\\_holders\n==============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.major_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_major_holders.rst.txt",
    "html": "yfinance.Ticker.get\\_major\\_holders\n===================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_major_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_insider_roster_holders.rst.txt",
    "html": "yfinance.Ticker.get\\_insider\\_roster\\_holders\n=============================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_insider_roster_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.insider_roster_holders.rst.txt",
    "html": "yfinance.Ticker.insider\\_roster\\_holders\n========================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.insider_roster_holders"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.insider_transactions.rst.txt",
    "html": "yfinance.Ticker.insider\\_transactions\n=====================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.insider_transactions"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_insider_transactions.rst.txt",
    "html": "yfinance.Ticker.get\\_insider\\_transactions\n==========================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_insider_transactions"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.insider_purchases.rst.txt",
    "html": "yfinance.Ticker.insider\\_purchases\n==================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.insider_purchases"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_insider_purchases.rst.txt",
    "html": "yfinance.Ticker.get\\_insider\\_purchases\n=======================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_insider_purchases"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.funds_data.rst.txt",
    "html": "yfinance.Ticker.funds\\_data\n===========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.funds_data"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_funds_data.rst.txt",
    "html": "yfinance.Ticker.get\\_funds\\_data\n================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_funds_data"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.growth_estimates.rst.txt",
    "html": "yfinance.Ticker.growth\\_estimates\n=================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.growth_estimates"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_growth_estimates.rst.txt",
    "html": "yfinance.Ticker.get\\_growth\\_estimates\n======================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_growth_estimates"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.eps_revisions.rst.txt",
    "html": "yfinance.Ticker.eps\\_revisions\n==============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.eps_revisions"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_eps_revisions.rst.txt",
    "html": "yfinance.Ticker.get\\_eps\\_revisions\n===================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_eps_revisions"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.eps_trend.rst.txt",
    "html": "yfinance.Ticker.eps\\_trend\n==========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.eps_trend"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_eps_trend.rst.txt",
    "html": "yfinance.Ticker.get\\_eps\\_trend\n===============================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_eps_trend"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.earnings_history.rst.txt",
    "html": "yfinance.Ticker.earnings\\_history\n=================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.earnings_history"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_earnings_history.rst.txt",
    "html": "yfinance.Ticker.get\\_earnings\\_history\n======================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_earnings_history"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.revenue_estimate.rst.txt",
    "html": "yfinance.Ticker.revenue\\_estimate\n=================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.revenue_estimate"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_revenue_estimate.rst.txt",
    "html": "yfinance.Ticker.get\\_revenue\\_estimate\n======================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_revenue_estimate"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.earnings_estimate.rst.txt",
    "html": "yfinance.Ticker.earnings\\_estimate\n==================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.earnings_estimate"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_earnings_estimate.rst.txt",
    "html": "yfinance.Ticker.get\\_earnings\\_estimate\n=======================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_earnings_estimate"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.analyst_price_targets.rst.txt",
    "html": "yfinance.Ticker.analyst\\_price\\_targets\n=======================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.analyst_price_targets"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_analyst_price_targets.rst.txt",
    "html": "yfinance.Ticker.get\\_analyst\\_price\\_targets\n============================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_analyst_price_targets"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.sustainability.rst.txt",
    "html": "yfinance.Ticker.sustainability\n==============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.sustainability"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_sustainability.rst.txt",
    "html": "yfinance.Ticker.get\\_sustainability\n===================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_sustainability"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.upgrades_downgrades.rst.txt",
    "html": "yfinance.Ticker.upgrades\\_downgrades\n====================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.upgrades_downgrades"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_upgrades_downgrades.rst.txt",
    "html": "yfinance.Ticker.get\\_upgrades\\_downgrades\n=========================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_upgrades_downgrades"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_recommendations_summary.rst.txt",
    "html": "yfinance.Ticker.get\\_recommendations\\_summary\n=============================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_recommendations_summary"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.recommendations_summary.rst.txt",
    "html": "yfinance.Ticker.recommendations\\_summary\n========================================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.recommendations_summary"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.recommendations.rst.txt",
    "html": "yfinance.Ticker.recommendations\n===============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.recommendations"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_recommendations.rst.txt",
    "html": "yfinance.Ticker.get\\_recommendations\n====================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_recommendations"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.analysis.rst.txt",
    "html": "===================\nAnalysis & Holdings\n===================\n\n.. currentmodule:: yfinance.Ticker\n\nAnalysis\n--------\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   get_recommendations\n   recommendations\n\n   get_recommendations_summary\n   recommendations_summary\n\n   get_upgrades_downgrades\n   upgrades_downgrades\n\n   get_sustainability\n   sustainability\n\n   get_analyst_price_targets\n   analyst_price_targets\n\n   get_earnings_estimate\n   earnings_estimate\n\n   get_revenue_estimate\n   revenue_estimate\n\n   get_earnings_history\n   earnings_history\n\n   get_eps_trend\n   eps_trend\n\n   get_eps_revisions\n   eps_revisions\n\n   get_growth_estimates\n   growth_estimates\n\n\nHoldings\n--------\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   get_funds_data\n   funds_data\n\n.. seealso::\n   :meth:`yfinance.scrapers.funds.FundsData`\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   get_insider_purchases\n   insider_purchases\n\n   get_insider_transactions\n   insider_transactions\n\n   get_insider_roster_holders\n   insider_roster_holders\n\n   get_major_holders\n   major_holders\n\n   get_institutional_holders\n   institutional_holders\n\n   get_mutualfund_holders\n   mutualfund_holders\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.sec_filings.rst.txt",
    "html": "yfinance.Ticker.sec\\_filings\n============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.sec_filings"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_sec_filings.rst.txt",
    "html": "yfinance.Ticker.get\\_sec\\_filings\n=================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_sec_filings"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.earnings_dates.rst.txt",
    "html": "yfinance.Ticker.earnings\\_dates\n===============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.earnings_dates"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_earnings_dates.rst.txt",
    "html": "yfinance.Ticker.get\\_earnings\\_dates\n====================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_earnings_dates"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.calendar.rst.txt",
    "html": "yfinance.Ticker.calendar\n========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.calendar"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.earnings.rst.txt",
    "html": "yfinance.Ticker.earnings\n========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.earnings"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_earnings.rst.txt",
    "html": "yfinance.Ticker.get\\_earnings\n=============================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_earnings"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.cashflow.rst.txt",
    "html": "yfinance.Ticker.cashflow\n========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.cashflow"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_cashflow.rst.txt",
    "html": "yfinance.Ticker.get\\_cashflow\n=============================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_cashflow"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.balance_sheet.rst.txt",
    "html": "yfinance.Ticker.balance\\_sheet\n==============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.balance_sheet"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_balance_sheet.rst.txt",
    "html": "yfinance.Ticker.get\\_balance\\_sheet\n===================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_balance_sheet"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.income_stmt.rst.txt",
    "html": "yfinance.Ticker.income\\_stmt\n============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.income_stmt"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_income_stmt.rst.txt",
    "html": "yfinance.Ticker.get\\_income\\_stmt\n=================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_income_stmt"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.financials.rst.txt",
    "html": "==========\nFinancials\n==========\n\n.. currentmodule:: yfinance.Ticker\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   get_income_stmt\n   income_stmt\n\n   get_balance_sheet\n   balance_sheet\n\n   get_cashflow\n   cashflow\n\n   get_earnings\n   earnings\n\n   calendar\n\n   get_earnings_dates\n   earnings_dates\n\n   get_sec_filings\n   sec_filings\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Market.rst.txt",
    "html": ":orphan:\n\nMarket\n======\n\n.. currentmodule:: yfinance\n\n.. autoclass:: Market\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: status\n      :noindex:\n   .. autoattribute:: summary\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.news.rst.txt",
    "html": "yfinance.Ticker.news\n====================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.news"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.market.rst.txt",
    "html": "=====================\nMarket\n=====================\n\n.. currentmodule:: yfinance\n\n\nClass\n------------\nThe `Market` class, allows you to access market data in a Pythonic way.\n\n.. autosummary::\n   :toctree: api/\n\n   Market\n\nMarket Sample Code\n------------------\n\n.. literalinclude:: examples/market.py\n   :language: python\n\n\nMarkets\n------------\nThere are 8 different markets available in Yahoo Finance.\n\n* US\n* GB\n\n\\ \n\n* ASIA\n* EUROPE\n\n\\ \n\n* RATES\n* COMMODITIES\n* CURRENCIES\n* CRYPTOCURRENCIES"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_news.rst.txt",
    "html": "yfinance.Ticker.get\\_news\n=========================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_news"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.fast_info.rst.txt",
    "html": "yfinance.Ticker.fast\\_info\n==========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.fast_info"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_fast_info.rst.txt",
    "html": "yfinance.Ticker.get\\_fast\\_info\n===============================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_fast_info"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.info.rst.txt",
    "html": "yfinance.Ticker.info\n====================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.info"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_shares_full.rst.txt",
    "html": "yfinance.Ticker.get\\_shares\\_full\n=================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_shares_full"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_info.rst.txt",
    "html": "yfinance.Ticker.get\\_info\n=========================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_info"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.capital_gains.rst.txt",
    "html": "yfinance.Ticker.capital\\_gains\n==============================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.capital_gains"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_capital_gains.rst.txt",
    "html": "yfinance.Ticker.get\\_capital\\_gains\n===================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_capital_gains"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.actions.rst.txt",
    "html": "yfinance.Ticker.actions\n=======================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.actions"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_actions.rst.txt",
    "html": "yfinance.Ticker.get\\_actions\n============================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_actions"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.splits.rst.txt",
    "html": "yfinance.Ticker.splits\n======================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.splits"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_splits.rst.txt",
    "html": "yfinance.Ticker.get\\_splits\n===========================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_splits"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.dividends.rst.txt",
    "html": "yfinance.Ticker.dividends\n=========================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.dividends"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_dividends.rst.txt",
    "html": "yfinance.Ticker.get\\_dividends\n==============================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_dividends"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_history_metadata.rst.txt",
    "html": "yfinance.Ticker.get\\_history\\_metadata\n======================================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_history_metadata"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.history.rst.txt",
    "html": "yfinance.Ticker.history\n=======================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.history"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.isin.rst.txt",
    "html": "yfinance.Ticker.isin\n====================\n\n.. currentmodule:: yfinance\n\n.. autoproperty:: Ticker.isin"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.get_isin.rst.txt",
    "html": "yfinance.Ticker.get\\_isin\n=========================\n\n.. currentmodule:: yfinance\n\n.. automethod:: Ticker.get_isin"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.stock.rst.txt",
    "html": "=====\nStock\n=====\n\n.. currentmodule:: yfinance.Ticker\n\nTicker stock methods\n--------------------\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   get_isin\n   isin\n\n   history\n\n.. seealso::\n   :meth:`yfinance.scrapers.history.PriceHistory.history`\n      Documentation for history\n\n.. autosummary::\n   :toctree: api/\n   :recursive:\n\n   get_history_metadata\n\n   get_dividends\n   dividends\n\n   get_splits\n   splits\n\n   get_actions\n   actions\n\n   get_capital_gains\n   capital_gains\n\n   get_shares_full\n\n   get_info\n   info\n\n   get_fast_info\n   fast_info\n\n   get_news\n   news\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Tickers.rst.txt",
    "html": ":orphan:\n\nTickers\n=======\n\n.. currentmodule:: yfinance\n\n.. autoclass:: Tickers\n\n   \n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   .. automethod:: download\n      :noindex:\n   .. automethod:: history\n      :noindex:\n   .. automethod:: news\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/api/yfinance.Ticker.rst.txt",
    "html": ":orphan:\n\nTicker\n======\n\n.. currentmodule:: yfinance\n\n.. autoclass:: Ticker\n\n   \n   \n   .. rubric:: Attributes\n   \n   \n   .. autoattribute:: actions\n      :noindex:\n   .. autoattribute:: analyst_price_targets\n      :noindex:\n   .. autoattribute:: balance_sheet\n      :noindex:\n   .. autoattribute:: balancesheet\n      :noindex:\n   .. autoattribute:: basic_info\n      :noindex:\n   .. autoattribute:: calendar\n      :noindex:\n   .. autoattribute:: capital_gains\n      :noindex:\n   .. autoattribute:: cash_flow\n      :noindex:\n   .. autoattribute:: cashflow\n      :noindex:\n   .. autoattribute:: dividends\n      :noindex:\n   .. autoattribute:: earnings\n      :noindex:\n   .. autoattribute:: earnings_dates\n      :noindex:\n   .. autoattribute:: earnings_estimate\n      :noindex:\n   .. autoattribute:: earnings_history\n      :noindex:\n   .. autoattribute:: eps_revisions\n      :noindex:\n   .. autoattribute:: eps_trend\n      :noindex:\n   .. autoattribute:: fast_info\n      :noindex:\n   .. autoattribute:: financials\n      :noindex:\n   .. autoattribute:: funds_data\n      :noindex:\n   .. autoattribute:: growth_estimates\n      :noindex:\n   .. autoattribute:: history_metadata\n      :noindex:\n   .. autoattribute:: income_stmt\n      :noindex:\n   .. autoattribute:: incomestmt\n      :noindex:\n   .. autoattribute:: info\n      :noindex:\n   .. autoattribute:: insider_purchases\n      :noindex:\n   .. autoattribute:: insider_roster_holders\n      :noindex:\n   .. autoattribute:: insider_transactions\n      :noindex:\n   .. autoattribute:: institutional_holders\n      :noindex:\n   .. autoattribute:: isin\n      :noindex:\n   .. autoattribute:: major_holders\n      :noindex:\n   .. autoattribute:: mutualfund_holders\n      :noindex:\n   .. autoattribute:: news\n      :noindex:\n   .. autoattribute:: options\n      :noindex:\n   .. autoattribute:: quarterly_balance_sheet\n      :noindex:\n   .. autoattribute:: quarterly_balancesheet\n      :noindex:\n   .. autoattribute:: quarterly_cash_flow\n      :noindex:\n   .. autoattribute:: quarterly_cashflow\n      :noindex:\n   .. autoattribute:: quarterly_earnings\n      :noindex:\n   .. autoattribute:: quarterly_financials\n      :noindex:\n   .. autoattribute:: quarterly_income_stmt\n      :noindex:\n   .. autoattribute:: quarterly_incomestmt\n      :noindex:\n   .. autoattribute:: recommendations\n      :noindex:\n   .. autoattribute:: recommendations_summary\n      :noindex:\n   .. autoattribute:: revenue_estimate\n      :noindex:\n   .. autoattribute:: sec_filings\n      :noindex:\n   .. autoattribute:: shares\n      :noindex:\n   .. autoattribute:: splits\n      :noindex:\n   .. autoattribute:: sustainability\n      :noindex:\n   .. autoattribute:: upgrades_downgrades\n      :noindex:\n   \n   \n\n   \n   \n   .. rubric:: Methods\n\n   \n   .. automethod:: __init__\n      :noindex:\n   .. automethod:: get_actions\n      :noindex:\n   .. automethod:: get_analyst_price_targets\n      :noindex:\n   .. automethod:: get_balance_sheet\n      :noindex:\n   .. automethod:: get_balancesheet\n      :noindex:\n   .. automethod:: get_calendar\n      :noindex:\n   .. automethod:: get_capital_gains\n      :noindex:\n   .. automethod:: get_cash_flow\n      :noindex:\n   .. automethod:: get_cashflow\n      :noindex:\n   .. automethod:: get_dividends\n      :noindex:\n   .. automethod:: get_earnings\n      :noindex:\n   .. automethod:: get_earnings_dates\n      :noindex:\n   .. automethod:: get_earnings_estimate\n      :noindex:\n   .. automethod:: get_earnings_history\n      :noindex:\n   .. automethod:: get_eps_revisions\n      :noindex:\n   .. automethod:: get_eps_trend\n      :noindex:\n   .. automethod:: get_fast_info\n      :noindex:\n   .. automethod:: get_financials\n      :noindex:\n   .. automethod:: get_funds_data\n      :noindex:\n   .. automethod:: get_growth_estimates\n      :noindex:\n   .. automethod:: get_history_metadata\n      :noindex:\n   .. automethod:: get_income_stmt\n      :noindex:\n   .. automethod:: get_incomestmt\n      :noindex:\n   .. automethod:: get_info\n      :noindex:\n   .. automethod:: get_insider_purchases\n      :noindex:\n   .. automethod:: get_insider_roster_holders\n      :noindex:\n   .. automethod:: get_insider_transactions\n      :noindex:\n   .. automethod:: get_institutional_holders\n      :noindex:\n   .. automethod:: get_isin\n      :noindex:\n   .. automethod:: get_major_holders\n      :noindex:\n   .. automethod:: get_mutualfund_holders\n      :noindex:\n   .. automethod:: get_news\n      :noindex:\n   .. automethod:: get_recommendations\n      :noindex:\n   .. automethod:: get_recommendations_summary\n      :noindex:\n   .. automethod:: get_revenue_estimate\n      :noindex:\n   .. automethod:: get_sec_filings\n      :noindex:\n   .. automethod:: get_shares\n      :noindex:\n   .. automethod:: get_shares_full\n      :noindex:\n   .. automethod:: get_splits\n      :noindex:\n   .. automethod:: get_sustainability\n      :noindex:\n   .. automethod:: get_upgrades_downgrades\n      :noindex:\n   .. automethod:: history\n      :noindex:\n   .. automethod:: option_chain\n      :noindex:\n   \n   "
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/yfinance.ticker_tickers.rst.txt",
    "html": "=====================\nTicker and Tickers\n=====================\n\n.. currentmodule:: yfinance\n\n\nClass\n------------\nThe `Ticker` module, allows you to access ticker data in a Pythonic way.\n\n.. autosummary::\n   :toctree: api/\n\n   Ticker\n   Tickers\n\n\nTicker Sample Code\n------------------\nThe `Ticker` module, allows you to access ticker data in a Pythonic way.\n\n.. literalinclude:: examples/ticker.py\n   :language: python\n\nTo initialize multiple `Ticker` objects, use\n\n.. literalinclude:: examples/tickers.py\n   :language: python\n\nFor tickers that are ETFs/Mutual Funds, `Ticker.funds_data` provides access to fund related data. \n\nFunds' Top Holdings and other data with category average is returned as `pd.DataFrame`.\n\n.. literalinclude:: examples/funds_data.py\n   :language: python\n\nIf you want to use a proxy server for downloading data, use:\n\n.. literalinclude:: examples/proxy.py\n   :language: python\n\nTo initialize multiple `Ticker` objects, use `Tickers` module\n\n.. literalinclude:: examples/tickers.py\n   :language: python\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/advanced/multi_level_columns.rst.txt",
    "html": "************************\nMulti-Level Column Index\n************************\n\nThe following answer on Stack Overflow is for `How to deal with\nmulti-level column names downloaded with yfinance? <https://stackoverflow.com/questions/63107801>`_\n\n- `yfinance` returns a `pandas.DataFrame` with multi-level column names, with a level for the ticker and a level for the stock price data\n\nThe answer discusses:\n\n- How to correctly read the the multi-level columns after saving the dataframe to a csv with `pandas.DataFrame.to_csv`\n- How to download single or multiple tickers into a singledataframe with single level column names and a ticker column"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/advanced/caching.rst.txt",
    "html": "Caching\n=======\n\nSmarter Scraping\n----------------\n\nInstall the `nospam` package to cache API calls and reduce spam to Yahoo:\n\n.. code-block:: bash\n\n   pip install yfinance[nospam]\n\nTo use a custom `requests` session, pass a `session=` argument to\nthe Ticker constructor. This allows for caching calls to the API as well as a custom way to modify requests via  the `User-agent` header.\n\n.. code-block:: python\n\n   import requests_cache\n   session = requests_cache.CachedSession('yfinance.cache')\n   session.headers['User-agent'] = 'my-program/1.0'\n   ticker = yf.Ticker('MSFT', session=session)\n   \n   # The scraped response will be stored in the cache\n   ticker.actions\n\n\nCombine `requests_cache` with rate-limiting to avoid triggering Yahoo's rate-limiter/blocker that can corrupt data.\n\n.. code-block:: python\n\n   from requests import Session\n   from requests_cache import CacheMixin, SQLiteCache\n   from requests_ratelimiter import LimiterMixin, MemoryQueueBucket\n   from pyrate_limiter import Duration, RequestRate, Limiter\n   class CachedLimiterSession(CacheMixin, LimiterMixin, Session):\n      pass\n\n   session = CachedLimiterSession(\n      limiter=Limiter(RequestRate(2, Duration.SECOND*5)),  # max 2 requests per 5 seconds\n      bucket_class=MemoryQueueBucket,\n      backend=SQLiteCache(\"yfinance.cache\"),\n   )\n\n\nPersistent Cache\n----------------\n\nTo reduce Yahoo, yfinance store some data locally: timezones to localize dates, and cookie. Cache location is:\n\n- Windows = C:/Users/\\<USER\\>/AppData/Local/py-yfinance\n- Linux = /home/\\<USER\\>/.cache/py-yfinance\n- MacOS = /Users/\\<USER\\>/Library/Caches/py-yfinance\n\nYou can direct cache to use a different location with :attr:`set_tz_cache_location <yfinance.set_tz_cache_location>`:\n\n.. code-block:: python\n\n    import yfinance as yf\n    yf.set_tz_cache_location(\"custom/cache/location\")"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/advanced/proxy.rst.txt",
    "html": "************\nProxy Server\n************\n\nYou can download data via a proxy:\n\n.. code-block:: python\n\n   msft = yf.Ticker(\"MSFT\")\n   msft.history(..., proxy=\"PROXY_SERVER\")\n\n"
  },
  {
    "title": "Reporting a Bug — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/development/reporting_bug.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nContributiong to yfinance\nContribution to the documentation\nReporting a Bug\nDevelopment\nReporting a Bug\nReporting a Bug\n\nOpen a new issue on our GitHub.\n\nPrevious\n\nContribution to the documentation\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/advanced/logging.rst.txt",
    "html": "Logging\n=======\n\n`yfinance` uses the `logging` module to handle messages. By default, only errors are logged.\n\nIf debugging, you can switch to debug mode with custom formatting using:\n\n.. code-block:: python\n\n   import yfinance as yf\n   yf.enable_debug_mode()\n"
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/development/index.rst.txt",
    "html": "===========\nDevelopment\n===========\n\n.. toctree::\n   :maxdepth: 1\n\n   contributing\n   documentation\n   reporting_bug"
  },
  {
    "title": "Contribution to the documentation — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/development/documentation.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nContributiong to yfinance\nContribution to the documentation\nReporting a Bug\nDevelopment\nContribution...\nContribution to the documentation\n\nDocumentation:\n\nAbout documentation\n\nBuilding documentation locally\n\nBuilding documentation on main\n\nAbout documentation\n\nyfinance documentation is written in reStructuredText (rst) and built using Sphinx.\n\nThe documentation file is in doc/source/...\n\nMost of the notes under API References read from class and methods docstrings. These documentations, found in doc/source/reference/api is autogenerated by Sphinx and not included in git.\n\nBuilding documentation locally\n\nTo build the documentation locally, follow these steps:\n\nInstall Required Dependencies:\n\nMake sure Sphinx and any other dependencies are installed. If a requirements.txt file is available, you can install dependencies by running:\n\npip install -r requirements.txt\n\n\nBuild with Sphinx:\n\nAfter dependencies are installed, use the sphinx-build command to generate HTML documentation.\n\nGo to doc/ directory Run:\n\nmake clean && make html\n\n\nView Documentation Locally:\n\nOpen doc/build/html/index.html in the browser to view the generated documentation.\n\nBuilding documentation on main\n\nThe documentation updates are built on merge to main branch. This is done via GitHub Actions workflow based on /yfinance/.github/workflows/deploy_doc.yml.\n\nReivew the changes locally and push to dev.\n\nWhen dev gets merged to main, GitHub Actions workflow is automated to build documentation.\n\nPrevious\n\nContributiong to yfinance\n\nNext\n\nReporting a Bug\n\n On this page\nAbout documentation\nBuilding documentation locally\nBuilding documentation on main\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Contributiong to yfinance — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/development/contributing.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nContributiong to yfinance\nContribution to the documentation\nReporting a Bug\nDevelopment\nContribution...\nContributiong to yfinance\n\nyfinance relies on the community to investigate bugs and contribute code. Here’s how you can help:\n\nContributing\n\nFork the repository on GitHub.\n\nClone your forked repository:\n\ngit clone https://github.com/your-username/yfinance.git\n\n\nCreate a new branch for your feature or bug fix:\n\ngit checkout -b feature-branch-name\n\n\nMake your changes, commit them, and push your branch to GitHub. To keep the commit history and network graph compact:\n\nUse short summaries for commits\n\ngit commit -m \"short summary\" -m \"full commit message\"\n\n\nSquash tiny or negligible commits with meaningful ones.\n\ngit rebase -i HEAD~2\ngit push --force-with-lease origin <branch-name>\n\n\nOpen a pull request on the yfinance GitHub page.\n\nFor more information, see the Developer Guide.\n\nBranches\n\nTo support rapid development without breaking stable versions, this project uses a two-layer branch model:\n\nInspiration\n\ndev: New features and some bug fixes are merged here. This branch allows collective testing, conflict resolution, and further stabilization before merging into the stable branch.\n\nmain: Stable branch where PIP releases are created.\n\nBy default, branches target main, but most contributions should target dev.\n\nExceptions: Direct merges to main are allowed if:\n\nyfinance is massively broken\n\nPart of yfinance is broken, and the fix is simple and isolated\n\nUnit Tests\n\nTests are written using Python’s unittest module. Here are some ways to run tests:\n\nRun all price tests:\n\npython -m unittest tests.test_prices\n\n\nRun a subset of price tests:\n\npython -m unittest tests.test_prices.TestPriceRepair\n\n\nRun a specific test:\n\npython -m unittest tests.test_prices.TestPriceRepair.test_ticker_missing\n\n\nRun all tests:\n\npython -m unittest discover -s tests\n\nRebasing\n\nIf asked to move your branch from main to dev:\n\nEnsure all relevant branches are pulled.\n\nRun:\n\ngit checkout <your-branch>\ngit rebase --onto dev main <branch-name>\ngit push --force-with-lease origin <branch-name>\n\nRunning the GitHub Version of yfinance\n\nTo download and run a GitHub version of yfinance, refer to GitHub discussion\n\nPrevious\n\nDevelopment\n\nNext\n\nContribution to the documentation\n\n On this page\nContributing\nBranches\nUnit Tests\nRebasing\nRunning the GitHub Version of yfinance\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "PriceHistory class — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.price_history.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nPriceH...\nPriceHistory class\nclass yfinance.scrapers.history.PriceHistory(data, ticker, tz, session=None, proxy=None)\nget_actions(proxy=None) → Series\nget_capital_gains(proxy=None) → Series\nget_dividends(proxy=None) → Series\nget_history_metadata(proxy=None) → dict\nget_splits(proxy=None) → Series\nhistory(period='1mo', interval='1d', start=None, end=None, prepost=False, actions=True, auto_adjust=True, back_adjust=False, repair=False, keepna=False, proxy=None, rounding=False, timeout=10, raise_errors=False) → DataFrame\nParameters\n:\nperiod\nstr\n\nValid periods: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max Either Use period parameter or use start and end\n\ninterval\nstr\n\nValid intervals: 1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo Intraday data cannot extend last 60 days\n\nstart: str\n\nDownload start date string (YYYY-MM-DD) or _datetime, inclusive. Default is 99 years ago E.g. for start=”2020-01-01”, the first data point will be on “2020-01-01”\n\nend: str\n\nDownload end date string (YYYY-MM-DD) or _datetime, exclusive. Default is now E.g. for end=”2023-01-01”, the last data point will be on “2022-12-31”\n\nprepost\nbool\n\nInclude Pre and Post market data in results? Default is False\n\nauto_adjust: bool\n\nAdjust all OHLC automatically? Default is True\n\nback_adjust: bool\n\nBack-adjusted data to mimic true historical prices\n\nrepair: bool\n\nDetect currency unit 100x mixups and attempt repair. Default is False\n\nkeepna: bool\n\nKeep NaN rows returned by Yahoo? Default is False\n\nproxy: str\n\nOptional. Proxy server URL scheme. Default is None\n\nrounding: bool\n\nRound values to 2 decimal places? Optional. Default is False = precision suggested by Yahoo!\n\ntimeout: None or float\n\nIf not None stops waiting for a response after given number of seconds. (Can also be a fraction of a second e.g. 0.01) Default is 10 seconds.\n\nraise_errors: bool\n\nIf True, then raise errors as Exceptions instead of logging.\n\nPrevious\n\nFundsData\n\nNext\n\nDevelopment\n\n On this page\nPriceHistory\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/reference/index.rst.txt",
    "html": "=============\nAPI Reference\n=============\n\nOverview\n--------\n\nThe `yfinance` package provides easy access to Yahoo! Finance's API to retrieve market data. It includes classes and functions for downloading historical market data, accessing ticker information, managing cache, and more.\n\n\nPublic API\n==========\n\nThe following are the publicly available classes, and functions exposed by the `yfinance` package:\n\n- :attr:`Ticker <yfinance.Ticker>`: Class for accessing single ticker data.\n- :attr:`Tickers <yfinance.Tickers>`: Class for handling multiple tickers.\n- :attr:`Market <yfinance.Market>`: Class for accessing market summary.\n- :attr:`download <yfinance.download>`: Function to download market data for multiple tickers.\n- :attr:`Search <yfinance.Search>`: Class for accessing search results.\n- :attr:`Sector <yfinance.Sector>`: Domain class for accessing sector information.\n- :attr:`Industry <yfinance.Industry>`: Domain class for accessing industry information.\n- :attr:`Market <yfinance.Market>`: Class for accessing market status & summary.\n- :attr:`EquityQuery <yfinance.EquityQuery>`: Class to build equity query filters.\n- :attr:`FundQuery <yfinance.FundQuery>`: Class to build fund query filters.\n- :attr:`screen <yfinance.screen>`: Run equity/fund queries.\n- :attr:`enable_debug_mode <yfinance.enable_debug_mode>`: Function to enable debug mode for logging.\n- :attr:`set_tz_cache_location <yfinance.set_tz_cache_location>`: Function to set the timezone cache location.\n\n.. toctree::\n   :maxdepth: 1\n   :hidden:\n\n\n   yfinance.ticker_tickers\n   yfinance.stock\n   yfinance.market\n   yfinance.financials\n   yfinance.analysis\n   yfinance.market\n   yfinance.search\n   yfinance.sector_industry\n   yfinance.screener\n   yfinance.functions\n\n   yfinance.funds_data\n   yfinance.price_history\n"
  },
  {
    "title": "FundsData — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.scrapers.funds.FundsData.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nFundsData\nPriceHistory class\nAPI Reference\nFundsData class\nFundsData\nFundsData\nclass yfinance.scrapers.funds.FundsData(data: YfData, symbol: str, proxy=None)\n\nETF and Mutual Funds Data Queried Modules: quoteType, summaryProfile, fundProfile, topHoldings\n\nNotes: - fundPerformance module is not implemented as better data is queryable using history\n\nParameters\n:\n\ndata (YfData) – The YfData object for fetching data.\n\nsymbol (str) – The symbol of the fund.\n\nproxy (optional) – Proxy settings for fetching data.\n\nAttributes\n\nasset_classes\n\nReturns the asset classes of the fund.\n\nReturns\n:\n\nThe asset classes.\n\nReturn type\n:\n\nDict[str, float]\n\nbond_holdings\n\nReturns the bond holdings of the fund.\n\nReturns\n:\n\nThe bond holdings.\n\nReturn type\n:\n\npd.DataFrame\n\nbond_ratings\n\nReturns the bond ratings of the fund.\n\nReturns\n:\n\nThe bond ratings.\n\nReturn type\n:\n\nDict[str, float]\n\ndescription\n\nReturns the description of the fund.\n\nReturns\n:\n\nThe description.\n\nReturn type\n:\n\nstr\n\nequity_holdings\n\nReturns the equity holdings of the fund.\n\nReturns\n:\n\nThe equity holdings.\n\nReturn type\n:\n\npd.DataFrame\n\nfund_operations\n\nReturns the fund operations.\n\nReturns\n:\n\nThe fund operations.\n\nReturn type\n:\n\npd.DataFrame\n\nfund_overview\n\nReturns the fund overview.\n\nReturns\n:\n\nThe fund overview.\n\nReturn type\n:\n\nDict[str, Optional[str]]\n\nsector_weightings\n\nReturns the sector weightings of the fund.\n\nReturns\n:\n\nThe sector weightings.\n\nReturn type\n:\n\nDict[str, float]\n\ntop_holdings\n\nReturns the top holdings of the fund.\n\nReturns\n:\n\nThe top holdings.\n\nReturn type\n:\n\npd.DataFrame\n\nMethods\n\n__init__(data: YfData, symbol: str, proxy=None)\nParameters\n:\n\ndata (YfData) – The YfData object for fetching data.\n\nsymbol (str) – The symbol of the fund.\n\nproxy (optional) – Proxy settings for fetching data.\n\nquote_type() → str\n\nReturns the quote type of the fund.\n\nReturns\n:\n\nThe quote type.\n\nReturn type\n:\n\nstr\n\nproperty asset_classes: Dict[str, float]\n\nReturns the asset classes of the fund.\n\nReturns\n:\n\nThe asset classes.\n\nReturn type\n:\n\nDict[str, float]\n\nproperty bond_holdings: DataFrame\n\nReturns the bond holdings of the fund.\n\nReturns\n:\n\nThe bond holdings.\n\nReturn type\n:\n\npd.DataFrame\n\nproperty bond_ratings: Dict[str, float]\n\nReturns the bond ratings of the fund.\n\nReturns\n:\n\nThe bond ratings.\n\nReturn type\n:\n\nDict[str, float]\n\nproperty description: str\n\nReturns the description of the fund.\n\nReturns\n:\n\nThe description.\n\nReturn type\n:\n\nstr\n\nproperty equity_holdings: DataFrame\n\nReturns the equity holdings of the fund.\n\nReturns\n:\n\nThe equity holdings.\n\nReturn type\n:\n\npd.DataFrame\n\nproperty fund_operations: DataFrame\n\nReturns the fund operations.\n\nReturns\n:\n\nThe fund operations.\n\nReturn type\n:\n\npd.DataFrame\n\nproperty fund_overview: Dict[str, str | None]\n\nReturns the fund overview.\n\nReturns\n:\n\nThe fund overview.\n\nReturn type\n:\n\nDict[str, Optional[str]]\n\nquote_type() → str\n\nReturns the quote type of the fund.\n\nReturns\n:\n\nThe quote type.\n\nReturn type\n:\n\nstr\n\nproperty sector_weightings: Dict[str, float]\n\nReturns the sector weightings of the fund.\n\nReturns\n:\n\nThe sector weightings.\n\nReturn type\n:\n\nDict[str, float]\n\nproperty top_holdings: DataFrame\n\nReturns the top holdings of the fund.\n\nReturns\n:\n\nThe top holdings.\n\nReturn type\n:\n\npd.DataFrame\n\nPrevious\n\nFundsData class\n\nNext\n\nPriceHistory class\n\n On this page\nFundsData\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "FundsData class — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.funds_data.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nFundsData\nPriceHistory class\nAPI Reference\nFundsD...\nFundsData class\n\nFundsData(data, symbol[, proxy])\n\n\t\n\nETF and Mutual Funds Data Queried Modules: quoteType, summaryProfile, fundProfile, topHoldings\n\nPrevious\n\nyfinance.set_tz_cache_location\n\nNext\n\nFundsData\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.set_tz_cache_location — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.set_tz_cache_location.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nyfinance.download\nyfinance.enable_debug_mode\nyfinance.set_tz_cache_location\nFundsData class\nPriceHistory class\nAPI Reference\nFunctions and Utilities\nyfinance.set...\nyfinance.set_tz_cache_location\nyfinance.set_tz_cache_location(cache_dir: str)\n\nPrevious\n\nyfinance.enable_debug_mode\n\nNext\n\nFundsData class\n\n On this page\nset_tz_cache_location()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.enable_debug_mode — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.enable_debug_mode.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nyfinance.download\nyfinance.enable_debug_mode\nyfinance.set_tz_cache_location\nFundsData class\nPriceHistory class\nAPI Reference\nFunctions and Utilities\nyfinance.ena...\nyfinance.enable_debug_mode\nyfinance.enable_debug_mode()\n\nPrevious\n\nyfinance.download\n\nNext\n\nyfinance.set_tz_cache_location\n\n On this page\nenable_debug_mode()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.download — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.download.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nyfinance.download\nyfinance.enable_debug_mode\nyfinance.set_tz_cache_location\nFundsData class\nPriceHistory class\nAPI Reference\nFunctions and Utilities\nyfinance.download\nyfinance.download\nyfinance.download(tickers, start=None, end=None, actions=False, threads=True, ignore_tz=None, group_by='column', auto_adjust=None, back_adjust=False, repair=False, keepna=False, progress=True, period='max', interval='1d', prepost=False, proxy=None, rounding=False, timeout=10, session=None, multi_level_index=True) → DataFrame | None\n\nDownload yahoo tickers :Parameters:\n\ntickersstr, list\n\nList of tickers to download\n\nperiodstr\n\nValid periods: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max Either Use period parameter or use start and end\n\nintervalstr\n\nValid intervals: 1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo Intraday data cannot extend last 60 days\n\nstart: str\n\nDownload start date string (YYYY-MM-DD) or _datetime, inclusive. Default is 99 years ago E.g. for start=”2020-01-01”, the first data point will be on “2020-01-01”\n\nend: str\n\nDownload end date string (YYYY-MM-DD) or _datetime, exclusive. Default is now E.g. for end=”2023-01-01”, the last data point will be on “2022-12-31”\n\ngroup_bystr\n\nGroup by ‘ticker’ or ‘column’ (default)\n\nprepostbool\n\nInclude Pre and Post market data in results? Default is False\n\nauto_adjust: bool\n\nAdjust all OHLC automatically? Default is True\n\nrepair: bool\n\nDetect currency unit 100x mixups and attempt repair Default is False\n\nkeepna: bool\n\nKeep NaN rows returned by Yahoo? Default is False\n\nactions: bool\n\nDownload dividend + stock splits data. Default is False\n\nthreads: bool / int\n\nHow many threads to use for mass downloading. Default is True\n\nignore_tz: bool\n\nWhen combining from different timezones, ignore that part of datetime. Default depends on interval. Intraday = False. Day+ = True.\n\nproxy: str\n\nOptional. Proxy server URL scheme. Default is None\n\nrounding: bool\n\nOptional. Round values to 2 decimal places?\n\ntimeout: None or float\n\nIf not None stops waiting for a response after given number of seconds. (Can also be a fraction of a second e.g. 0.01)\n\nsession: None or Session\n\nOptional. Pass your own session object to be used for all requests\n\nmulti_level_index: bool\n\nOptional. Always return a MultiIndex DataFrame? Default is True\n\nPrevious\n\nFunctions and Utilities\n\nNext\n\nyfinance.enable_debug_mode\n\n On this page\ndownload()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Functions and Utilities — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.functions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nyfinance.download\nyfinance.enable_debug_mode\nyfinance.set_tz_cache_location\nFundsData class\nPriceHistory class\nAPI Reference\nFunctions...\nFunctions and Utilities\nDownload Market Data\n\nThe download function allows you to retrieve market data for multiple tickers at once.\n\ndownload(tickers[, start, end, actions, ...])\n\n\t\n\nDownload yahoo tickers :Parameters: tickers : str, list List of tickers to download period : str Valid periods: 1d,5d,1mo,3mo,6mo,1y,2y,5y,10y,ytd,max Either Use period parameter or use start and end interval : str Valid intervals: 1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo Intraday data cannot extend last 60 days start: str Download start date string (YYYY-MM-DD) or _datetime, inclusive. Default is 99 years ago E.g. for start=\"2020-01-01\", the first data point will be on \"2020-01-01\" end: str Download end date string (YYYY-MM-DD) or _datetime, exclusive. Default is now E.g. for end=\"2023-01-01\", the last data point will be on \"2022-12-31\" group_by : str Group by 'ticker' or 'column' (default) prepost : bool Include Pre and Post market data in results? Default is False auto_adjust: bool Adjust all OHLC automatically? Default is True repair: bool Detect currency unit 100x mixups and attempt repair Default is False keepna: bool Keep NaN rows returned by Yahoo? Default is False actions: bool Download dividend + stock splits data. Default is False threads: bool / int How many threads to use for mass downloading. Default is True ignore_tz: bool When combining from different timezones, ignore that part of datetime. Default depends on interval. Intraday = False. Day+ = True. proxy: str Optional. Proxy server URL scheme. Default is None rounding: bool Optional. Round values to 2 decimal places? timeout: None or float If not None stops waiting for a response after given number of seconds. (Can also be a fraction of a second e.g. 0.01) session: None or Session Optional. Pass your own session object to be used for all requests multi_level_index: bool Optional. Always return a MultiIndex DataFrame? Default is True.\n\nEnable Debug Mode\n\nEnables logging of debug information for the yfinance package.\n\nenable_debug_mode()\n\n\t\n\nSet Timezone Cache Location\n\nSets the cache location for timezone data.\n\nset_tz_cache_location(cache_dir)\n\n\t\n\nPrevious\n\nyfinance.screen\n\nNext\n\nyfinance.download\n\n On this page\nDownload Market Data\nEnable Debug Mode\nSet Timezone Cache Location\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.screen — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.screen.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nEquityQuery\nFundQuery\nyfinance.screen\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nScreener & Query\nyfinance.screen\nyfinance.screen\nyfinance.screen(query: str | EquityQuery | FundQuery, offset: int = None, size: int = None, sortField: str = None, sortAsc: bool = None, userId: str = None, userIdType: str = None, session=None, proxy=None)\n\nRun a screen: predefined query, or custom query.\n\nParameters:\n\nDefaults only apply if query = EquityQuery or FundQuery\n\nquery\nstr | Query:\n\nThe query to execute, either name of predefined or custom query. For predefined list run yf.PREDEFINED_SCREENER_QUERIES.keys()\n\noffset\nint\n\nThe offset for the results. Default 0.\n\nsize\nint\n\nnumber of results to return. Default 100, maximum 250 (Yahoo)\n\nsortField\nstr\n\nfield to sort by. Default “ticker”\n\nsortAsc\nbool\n\nSort ascending? Default False\n\nuserId\nstr\n\nThe user ID. Default empty.\n\nuserIdType\nstr\n\nType of user ID (e.g., “guid”). Default “guid”.\n\nExample: predefined query\nimport yfinance as yf\nresponse = yf.screen(\"aggressive_small_caps\")\n\nExample: custom query\nimport yfinance as yf\nfrom yfinance import EquityQuery\nq = EquityQuery('and', [\n       EquityQuery('gt', ['percentchange', 3]),\n       EquityQuery('eq', ['region', 'us'])\n])\nresponse = yf.screen(q, sortField = 'percentchange', sortAsc = True)\n\nTo access predefineds query code\nimport yfinance as yf\nquery = yf.PREDEFINED_SCREENER_QUERIES['aggressive_small_caps']\n\nPredefined queries (Dec-2024)\n\nKey\n\n\t\n\nValues\n\n\n\n\naggressive_small_caps\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(IS-IN, [‘exchange’, ‘NMS’, ‘NYQ’]),\nEquityQuery(LT, [‘epsgrowth.lasttwelvemonths’, 15])\n])\nsortField: eodvolume\nsortType: desc\n\n\n\nday_gainers\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(GT, [‘percentchange’, 3]),\nEquityQuery(EQ, [‘region’, ‘us’]),\nEquityQuery(GTE, [‘intradaymarketcap’, 2000000000]),\nEquityQuery(GTE, [‘intradayprice’, 5]),\nEquityQuery(GT, [‘dayvolume’, 15000])\n])\nsortField: percentchange\nsortType: DESC\n\n\n\nday_losers\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(LT, [‘percentchange’, -2.5]),\nEquityQuery(EQ, [‘region’, ‘us’]),\nEquityQuery(GTE, [‘intradaymarketcap’, 2000000000]),\nEquityQuery(GTE, [‘intradayprice’, 5]),\nEquityQuery(GT, [‘dayvolume’, 20000])\n])\nsortField: percentchange\nsortType: ASC\n\n\n\ngrowth_technology_stocks\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(GTE, [‘quarterlyrevenuegrowth.quarterly’, 25]),\nEquityQuery(GTE, [‘epsgrowth.lasttwelvemonths’, 25]),\nEquityQuery(EQ, [‘sector’, ‘Technology’]),\nEquityQuery(IS-IN, [‘exchange’, ‘NMS’, ‘NYQ’])\n])\nsortField: eodvolume\nsortType: desc\n\n\n\nmost_actives\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(EQ, [‘region’, ‘us’]),\nEquityQuery(GTE, [‘intradaymarketcap’, 2000000000]),\nEquityQuery(GT, [‘dayvolume’, 5000000])\n])\nsortField: dayvolume\nsortType: DESC\n\n\n\nmost_shorted_stocks\n\n\t\noffset: 0\nquery:\nEquityQuery(AND, [\nEquityQuery(EQ, [‘region’, ‘us’]),\nEquityQuery(GT, [‘intradayprice’, 1]),\nEquityQuery(GT, [‘avgdailyvol3m’, 200000])\n])\nsize: 25\nsortField: short_percentage_of_shares_outstanding.value\nsortType: DESC\n\n\n\nsmall_cap_gainers\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(LT, [‘intradaymarketcap’, 2000000000]),\nEquityQuery(IS-IN, [‘exchange’, ‘NMS’, ‘NYQ’])\n])\nsortField: eodvolume\nsortType: desc\n\n\n\nundervalued_growth_stocks\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(BTWN, [‘peratio.lasttwelvemonths’, 0, 20]),\nEquityQuery(LT, [‘pegratio_5y’, 1]),\nEquityQuery(GTE, [‘epsgrowth.lasttwelvemonths’, 25]),\nEquityQuery(IS-IN, [‘exchange’, ‘NMS’, ‘NYQ’])\n])\nsortField: eodvolume\nsortType: DESC\n\n\n\nundervalued_large_caps\n\n\t\nquery:\nEquityQuery(AND, [\nEquityQuery(BTWN, [‘peratio.lasttwelvemonths’, 0, 20]),\nEquityQuery(LT, [‘pegratio_5y’, 1]),\nEquityQuery(BTWN, [‘intradaymarketcap’, 10000000000, 100000000000]),\nEquityQuery(IS-IN, [‘exchange’, ‘NMS’, ‘NYQ’])\n])\nsortField: eodvolume\nsortType: desc\n\n\n\nconservative_foreign_funds\n\n\t\nquery:\nFundQuery(AND, [\nFundQuery(IS-IN, [‘categoryname’, ‘Foreign Large Value’, ‘Foreign Large Blend’, ‘Foreign Large Growth’, ‘Foreign Small/Mid Growth’, ‘Foreign Small/Mid Blend’, ‘Foreign Small/Mid Value’]),\nFundQuery(IS-IN, [‘performanceratingoverall’, 4, 5]),\nFundQuery(LT, [‘initialinvestment’, 100001]),\nFundQuery(LT, [‘annualreturnnavy1categoryrank’, 50]),\nFundQuery(IS-IN, [‘riskratingoverall’, 1, 2, 3]),\nFundQuery(EQ, [‘exchange’, ‘NAS’])\n])\nsortField: fundnetassets\nsortType: DESC\n\n\n\nhigh_yield_bond\n\n\t\nquery:\nFundQuery(AND, [\nFundQuery(IS-IN, [‘performanceratingoverall’, 4, 5]),\nFundQuery(LT, [‘initialinvestment’, 100001]),\nFundQuery(LT, [‘annualreturnnavy1categoryrank’, 50]),\nFundQuery(IS-IN, [‘riskratingoverall’, 1, 2, 3]),\nFundQuery(EQ, [‘categoryname’, ‘High Yield Bond’]),\nFundQuery(EQ, [‘exchange’, ‘NAS’])\n])\nsortField: fundnetassets\nsortType: DESC\n\n\n\nportfolio_anchors\n\n\t\nquery:\nFundQuery(AND, [\nFundQuery(EQ, [‘categoryname’, ‘Large Blend’]),\nFundQuery(IS-IN, [‘performanceratingoverall’, 4, 5]),\nFundQuery(LT, [‘initialinvestment’, 100001]),\nFundQuery(LT, [‘annualreturnnavy1categoryrank’, 50]),\nFundQuery(EQ, [‘exchange’, ‘NAS’])\n])\nsortField: fundnetassets\nsortType: DESC\n\n\n\nsolid_large_growth_funds\n\n\t\nquery:\nFundQuery(AND, [\nFundQuery(EQ, [‘categoryname’, ‘Large Growth’]),\nFundQuery(IS-IN, [‘performanceratingoverall’, 4, 5]),\nFundQuery(LT, [‘initialinvestment’, 100001]),\nFundQuery(LT, [‘annualreturnnavy1categoryrank’, 50]),\nFundQuery(EQ, [‘exchange’, ‘NAS’])\n])\nsortField: fundnetassets\nsortType: DESC\n\n\n\nsolid_midcap_growth_funds\n\n\t\nquery:\nFundQuery(AND, [\nFundQuery(EQ, [‘categoryname’, ‘Mid-Cap Growth’]),\nFundQuery(IS-IN, [‘performanceratingoverall’, 4, 5]),\nFundQuery(LT, [‘initialinvestment’, 100001]),\nFundQuery(LT, [‘annualreturnnavy1categoryrank’, 50]),\nFundQuery(EQ, [‘exchange’, ‘NAS’])\n])\nsortField: fundnetassets\nsortType: DESC\n\n\n\ntop_mutual_funds\n\n\t\nquery:\nFundQuery(AND, [\nFundQuery(GT, [‘intradayprice’, 15]),\nFundQuery(IS-IN, [‘performanceratingoverall’, 4, 5]),\nFundQuery(GT, [‘initialinvestment’, 1000]),\nFundQuery(EQ, [‘exchange’, ‘NAS’])\n])\nsortField: percentchange\nsortType: DESC\n\nPrevious\n\nFundQuery\n\nNext\n\nFunctions and Utilities\n\n On this page\nscreen()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "FundQuery — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.FundQuery.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nEquityQuery\nFundQuery\nyfinance.screen\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nScreener & Query\nFundQuery\nFundQuery\nclass yfinance.FundQuery(operator: str, operand: List[QueryBase] | Tuple[str, Tuple[str | Real, ...]])\n\nThe FundQuery class constructs filters for mutual funds based on specific criteria such as region, sector, exchange, and peer group.\n\nStart with value operations: EQ (equals), IS-IN (is in), BTWN (between), GT (greater than), LT (less than), GTE (greater or equal), LTE (less or equal).\n\nCombine them with logical operations: AND, OR.\n\nExample\n\nPredefined Yahoo query solid_large_growth_funds:\n\nfrom yfinance import FundQuery\n\nFundQuery('and', [\n    FundQuery('eq', ['categoryname', 'Large Growth']),\n    FundQuery('is-in', ['performanceratingoverall', 4, 5]),\n    FundQuery('lt', ['initialinvestment', 100001]),\n    FundQuery('lt', ['annualreturnnavy1categoryrank', 50]),\n    FundQuery('eq', ['exchange', 'NAS'])\n])\n\n\nAttributes\n\nvalid_fields\n\nValid operands, grouped by category.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\neq_fields\n\n\t\n\nannualreturnnavy1categoryrank\n\ncategoryname\n\nexchange\n\ninitialinvestment\n\nperformanceratingoverall\n\nriskratingoverall\n\n\n\n\nprice\n\n\t\n\neodprice\n\nintradayprice\n\nintradaypricechange\n\nvalid_values\n\nMost operands take number values, but some have a restricted set of valid values.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\nexchange\n\n\t\n\nus: NAS\n\nMethods\n\n__init__(operator: str, operand: List[QueryBase] | Tuple[str, Tuple[str | Real, ...]])\nto_dict() → Dict\nproperty valid_fields: Dict\n\nValid operands, grouped by category.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\neq_fields\n\n\t\n\nannualreturnnavy1categoryrank\n\ncategoryname\n\nexchange\n\ninitialinvestment\n\nperformanceratingoverall\n\nriskratingoverall\n\n\n\n\nprice\n\n\t\n\neodprice\n\nintradayprice\n\nintradaypricechange\n\nproperty valid_values: Dict\n\nMost operands take number values, but some have a restricted set of valid values.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\nexchange\n\n\t\n\nus: NAS\n\nPrevious\n\nEquityQuery\n\nNext\n\nyfinance.screen\n\n On this page\nFundQuery\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "EquityQuery — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.EquityQuery.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nEquityQuery\nFundQuery\nyfinance.screen\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nScreener & Query\nEquityQuery\nEquityQuery\nclass yfinance.EquityQuery(operator: str, operand: List[QueryBase] | Tuple[str, Tuple[str | Real, ...]])\n\nThe EquityQuery class constructs filters for stocks based on specific criteria such as region, sector, exchange, and peer group.\n\nStart with value operations: EQ (equals), IS-IN (is in), BTWN (between), GT (greater than), LT (less than), GTE (greater or equal), LTE (less or equal).\n\nCombine them with logical operations: AND, OR.\n\nExample\n\nPredefined Yahoo query aggressive_small_caps:\n\nfrom yfinance import EquityQuery\n\nEquityQuery('and', [\n    EquityQuery('is-in', ['exchange', 'NMS', 'NYQ']),\n    EquityQuery('lt', [\"epsgrowth.lasttwelvemonths\", 15])\n])\n\n\nAttributes\n\nvalid_fields\n\nValid operands, grouped by category.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\neq_fields\n\n\t\n\nexchange\n\npeer_group\n\nregion\n\nsector\n\n\n\n\nprice\n\n\t\n\neodprice\n\nfiftytwowkpercentchange\n\nintradaymarketcap\n\nintradayprice\n\nintradaypricechange\n\nlastclose52weekhigh.lasttwelvemonths\n\nlastclose52weeklow.lasttwelvemonths\n\nlastclosemarketcap.lasttwelvemonths\n\npercentchange\n\n\n\n\ntrading\n\n\t\n\navgdailyvol3m\n\nbeta\n\ndayvolume\n\neodvolume\n\npctheldinsider\n\npctheldinst\n\n\n\n\nshort_interest\n\n\t\n\ndays_to_cover_short.value\n\nshort_interest.value\n\nshort_interest_percentage_change.value\n\nshort_percentage_of_float.value\n\nshort_percentage_of_shares_outstanding.value\n\n\n\n\nvaluation\n\n\t\n\nbookvalueshare.lasttwelvemonths\n\nlastclosemarketcaptotalrevenue.lasttwelvemonths\n\nlastclosepriceearnings.lasttwelvemonths\n\nlastclosepricetangiblebookvalue.lasttwelvemonths\n\nlastclosetevtotalrevenue.lasttwelvemonths\n\npegratio_5y\n\nperatio.lasttwelvemonths\n\npricebookratio.quarterly\n\n\n\n\nprofitability\n\n\t\n\nconsecutive_years_of_dividend_growth_count\n\nforward_dividend_per_share\n\nforward_dividend_yield\n\nreturnonassets.lasttwelvemonths\n\nreturnonequity.lasttwelvemonths\n\nreturnontotalcapital.lasttwelvemonths\n\n\n\n\nleverage\n\n\t\n\nebitdainterestexpense.lasttwelvemonths\n\nebitinterestexpense.lasttwelvemonths\n\nlastclosetevebit.lasttwelvemonths\n\nlastclosetevebitda.lasttwelvemonths\n\nltdebtequity.lasttwelvemonths\n\nnetdebtebitda.lasttwelvemonths\n\ntotaldebtebitda.lasttwelvemonths\n\ntotaldebtequity.lasttwelvemonths\n\n\n\n\nliquidity\n\n\t\n\naltmanzscoreusingtheaveragestockinformationforaperiod.lasttwelvemonths\n\ncurrentratio.lasttwelvemonths\n\noperatingcashflowtocurrentliabilities.lasttwelvemonths\n\nquickratio.lasttwelvemonths\n\n\n\n\nincome_statement\n\n\t\n\nbasicepscontinuingoperations.lasttwelvemonths\n\ndilutedeps1yrgrowth.lasttwelvemonths\n\ndilutedepscontinuingoperations.lasttwelvemonths\n\nebit.lasttwelvemonths\n\nebitda.lasttwelvemonths\n\nebitda1yrgrowth.lasttwelvemonths\n\nebitdamargin.lasttwelvemonths\n\nepsgrowth.lasttwelvemonths\n\ngrossprofit.lasttwelvemonths\n\ngrossprofitmargin.lasttwelvemonths\n\nnetepsbasic.lasttwelvemonthsnetepsdiluted.lasttwelvemonths\n\nnetincome1yrgrowth.lasttwelvemonths\n\nnetincomeis.lasttwelvemonths\n\nnetincomemargin.lasttwelvemonths\n\noperatingincome.lasttwelvemonths\n\nquarterlyrevenuegrowth.quarterly\n\ntotalrevenues.lasttwelvemonths\n\ntotalrevenues1yrgrowth.lasttwelvemonths\n\n\n\n\nbalance_sheet\n\n\t\n\ntotalassets.lasttwelvemonths\n\ntotalcashandshortterminvestments.lasttwelvemonths\n\ntotalcommonequity.lasttwelvemonths\n\ntotalcommonsharesoutstanding.lasttwelvemonths\n\ntotalcurrentassets.lasttwelvemonths\n\ntotalcurrentliabilities.lasttwelvemonths\n\ntotaldebt.lasttwelvemonths\n\ntotalequity.lasttwelvemonths\n\ntotalsharesoutstanding\n\n\n\n\ncash_flow\n\n\t\n\ncapitalexpenditure.lasttwelvemonths\n\ncashfromoperations.lasttwelvemonths\n\ncashfromoperations1yrgrowth.lasttwelvemonths\n\nforward_dividend_yield\n\nleveredfreecashflow.lasttwelvemonths\n\nleveredfreecashflow1yrgrowth.lasttwelvemonths\n\nunleveredfreecashflow.lasttwelvemonths\n\n\n\n\nesg\n\n\t\n\nenvironmental_score\n\nesg_score\n\ngovernance_score\n\nhighest_controversy\n\nsocial_score\n\nvalid_values\n\nMost operands take number values, but some have a restricted set of valid values.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\nregion\n\n\t\n\nar, at, au, be, br, ca, ch, cl, cn, co, cz, de, dk, ee, eg, es, fi, fr, gb, gr, hk, hu, id, ie, il, in, is, it, jp, kr, kw, lk, lt, lv, mx, my, nl, no, nz, pe, ph, pk, pl, pt, qa, ro, ru, sa, se, sg, sr, th, tr, tw, us, ve, vn, za\n\n\n\n\nexchange\n\n\t\nar: BUE. at: VIE. au: ASX. be: BRU\nbr: SAO. ca: CNQ, NEO, TOR, VAN\nch: EBS. cl: SGO. cn: SHH, SHZ\nco: BVC. cz: PRA\nde: BER, DUS, FRA, GER, HAM, MUN, STU\ndk: CPH. ee: TAL. eg: CAI. es: MCE\nfi: HEL. fr: PAR. gb: AQS, IOB, LSE\ngr: ATH. hk: HKG. hu: BUD. id: JKT\nie: ISE. il: TLV. in: BSE, NSI\nis: ICE. it: MIL. jp: FKA, JPX, SAP\nkr: KOE, KSC. kw: KUW. lk:\nlt: LIT. lv: RIS. mx: MEX. my: KLS\nnl: AMS. no: OSL. nz: NZE. pe:\nph: PHP, PHS. pk: . pl: WSE\npt: LIS. qa: DOH. ro: BVB. ru:\nsa: SAU. se: STO. sg: SES. sr:\nth: SET. tr: IST. tw: TAI, TWO\nus: ASE, BTS, CXI, NCM, NGM, NMS, NYQ, OEM, OQB, OQX, PCX, PNK, YHD\nve: CCS. vn: . za: JNB\n\n\n\nsector\n\n\t\n\nBasic Materials\n\nCommunication Services\n\nConsumer Cyclical\n\nConsumer Defensive\n\nEnergy\n\nFinancial Services\n\nHealthcare\n\nIndustrials\n\nReal Estate\n\nTechnology\n\nUtilities\n\n\n\n\npeer_group\n\n\t\n\nAerospace & Defense\n\nAuto Components\n\nAutomobiles\n\nBanks\n\nBuilding Products\n\nChemicals\n\nChina Fund Aggressive Allocation Fund\n\nChina Fund Equity Funds\n\nChina Fund QDII Greater China Equity\n\nChina Fund QDII Sector Equity\n\nChina Fund Sector Equity Financial and Real Estate\n\nCommercial Services\n\nConstruction & Engineering\n\nConstruction Materials\n\nConsumer Durables\n\nConsumer Services\n\nContainers & Packaging\n\nDiversified Financials\n\nDiversified Metals\n\nEAA CE Global Large-Cap Blend Equity\n\nEAA CE Other\n\nEAA CE Sector Equity Biotechnology\n\nEAA CE UK Large-Cap Equity\n\nEAA CE UK Small-Cap Equity\n\nEAA Fund Asia ex-Japan Equity\n\nEAA Fund China Equity\n\nEAA Fund China Equity - A Shares\n\nEAA Fund Denmark Equity\n\nEAA Fund EUR Aggressive Allocation - Global\n\nEAA Fund EUR Corporate Bond\n\nEAA Fund EUR Moderate Allocation - Global\n\nEAA Fund Emerging Europe ex-Russia Equity\n\nEAA Fund Europe Large-Cap Blend Equity\n\nEAA Fund Eurozone Large-Cap Equity\n\nEAA Fund Germany Equity\n\nEAA Fund Global Emerging Markets Equity\n\nEAA Fund Global Equity Income\n\nEAA Fund Global Flex-Cap Equity\n\nEAA Fund Global Large-Cap Blend Equity\n\nEAA Fund Global Large-Cap Growth Equity\n\nEAA Fund Hong Kong Equity\n\nEAA Fund Japan Large-Cap Equity\n\nEAA Fund Other Bond\n\nEAA Fund Other Equity\n\nEAA Fund RMB Bond - Onshore\n\nEAA Fund Sector Equity Consumer Goods & Services\n\nEAA Fund Sector Equity Financial Services\n\nEAA Fund Sector Equity Industrial Materials\n\nEAA Fund Sector Equity Technology\n\nEAA Fund South Africa & Namibia Equity\n\nEAA Fund Switzerland Equity\n\nEAA Fund US Large-Cap Blend Equity\n\nEAA Fund USD Corporate Bond\n\nElectrical Equipment\n\nEnergy Services\n\nFood Products\n\nFood Retailers\n\nHealthcare\n\nHomebuilders\n\nHousehold Products\n\nIndia CE Multi-Cap\n\nIndia Fund Large-Cap\n\nIndia Fund Sector - Financial Services\n\nIndustrial Conglomerates\n\nInsurance\n\nMachinery\n\nMedia\n\nMexico Fund Mexico Equity\n\nOil & Gas Producers\n\nPaper & Forestry\n\nPharmaceuticals\n\nPrecious Metals\n\nReal Estate\n\nRefiners & Pipelines\n\nRetailing\n\nSemiconductors\n\nSoftware & Services\n\nSteel\n\nTechnology Hardware\n\nTelecommunication Services\n\nTextiles & Apparel\n\nTraders & Distributors\n\nTransportation\n\nTransportation Infrastructure\n\nUS CE Convertibles\n\nUS CE Options-based\n\nUS CE Preferred Stock\n\nUS Fund China Region\n\nUS Fund Consumer Cyclical\n\nUS Fund Diversified Emerging Mkts\n\nUS Fund Equity Energy\n\nUS Fund Equity Precious Metals\n\nUS Fund Financial\n\nUS Fund Foreign Large Blend\n\nUS Fund Health\n\nUS Fund Large Blend\n\nUS Fund Large Growth\n\nUS Fund Large Value\n\nUS Fund Miscellaneous Region\n\nUS Fund Natural Resources\n\nUS Fund Technology\n\nUS Fund Trading–Leveraged Equity\n\nUtilities\n\nMethods\n\n__init__(operator: str, operand: List[QueryBase] | Tuple[str, Tuple[str | Real, ...]])\nto_dict() → Dict\nproperty valid_fields: Dict\n\nValid operands, grouped by category.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\neq_fields\n\n\t\n\nexchange\n\npeer_group\n\nregion\n\nsector\n\n\n\n\nprice\n\n\t\n\neodprice\n\nfiftytwowkpercentchange\n\nintradaymarketcap\n\nintradayprice\n\nintradaypricechange\n\nlastclose52weekhigh.lasttwelvemonths\n\nlastclose52weeklow.lasttwelvemonths\n\nlastclosemarketcap.lasttwelvemonths\n\npercentchange\n\n\n\n\ntrading\n\n\t\n\navgdailyvol3m\n\nbeta\n\ndayvolume\n\neodvolume\n\npctheldinsider\n\npctheldinst\n\n\n\n\nshort_interest\n\n\t\n\ndays_to_cover_short.value\n\nshort_interest.value\n\nshort_interest_percentage_change.value\n\nshort_percentage_of_float.value\n\nshort_percentage_of_shares_outstanding.value\n\n\n\n\nvaluation\n\n\t\n\nbookvalueshare.lasttwelvemonths\n\nlastclosemarketcaptotalrevenue.lasttwelvemonths\n\nlastclosepriceearnings.lasttwelvemonths\n\nlastclosepricetangiblebookvalue.lasttwelvemonths\n\nlastclosetevtotalrevenue.lasttwelvemonths\n\npegratio_5y\n\nperatio.lasttwelvemonths\n\npricebookratio.quarterly\n\n\n\n\nprofitability\n\n\t\n\nconsecutive_years_of_dividend_growth_count\n\nforward_dividend_per_share\n\nforward_dividend_yield\n\nreturnonassets.lasttwelvemonths\n\nreturnonequity.lasttwelvemonths\n\nreturnontotalcapital.lasttwelvemonths\n\n\n\n\nleverage\n\n\t\n\nebitdainterestexpense.lasttwelvemonths\n\nebitinterestexpense.lasttwelvemonths\n\nlastclosetevebit.lasttwelvemonths\n\nlastclosetevebitda.lasttwelvemonths\n\nltdebtequity.lasttwelvemonths\n\nnetdebtebitda.lasttwelvemonths\n\ntotaldebtebitda.lasttwelvemonths\n\ntotaldebtequity.lasttwelvemonths\n\n\n\n\nliquidity\n\n\t\n\naltmanzscoreusingtheaveragestockinformationforaperiod.lasttwelvemonths\n\ncurrentratio.lasttwelvemonths\n\noperatingcashflowtocurrentliabilities.lasttwelvemonths\n\nquickratio.lasttwelvemonths\n\n\n\n\nincome_statement\n\n\t\n\nbasicepscontinuingoperations.lasttwelvemonths\n\ndilutedeps1yrgrowth.lasttwelvemonths\n\ndilutedepscontinuingoperations.lasttwelvemonths\n\nebit.lasttwelvemonths\n\nebitda.lasttwelvemonths\n\nebitda1yrgrowth.lasttwelvemonths\n\nebitdamargin.lasttwelvemonths\n\nepsgrowth.lasttwelvemonths\n\ngrossprofit.lasttwelvemonths\n\ngrossprofitmargin.lasttwelvemonths\n\nnetepsbasic.lasttwelvemonthsnetepsdiluted.lasttwelvemonths\n\nnetincome1yrgrowth.lasttwelvemonths\n\nnetincomeis.lasttwelvemonths\n\nnetincomemargin.lasttwelvemonths\n\noperatingincome.lasttwelvemonths\n\nquarterlyrevenuegrowth.quarterly\n\ntotalrevenues.lasttwelvemonths\n\ntotalrevenues1yrgrowth.lasttwelvemonths\n\n\n\n\nbalance_sheet\n\n\t\n\ntotalassets.lasttwelvemonths\n\ntotalcashandshortterminvestments.lasttwelvemonths\n\ntotalcommonequity.lasttwelvemonths\n\ntotalcommonsharesoutstanding.lasttwelvemonths\n\ntotalcurrentassets.lasttwelvemonths\n\ntotalcurrentliabilities.lasttwelvemonths\n\ntotaldebt.lasttwelvemonths\n\ntotalequity.lasttwelvemonths\n\ntotalsharesoutstanding\n\n\n\n\ncash_flow\n\n\t\n\ncapitalexpenditure.lasttwelvemonths\n\ncashfromoperations.lasttwelvemonths\n\ncashfromoperations1yrgrowth.lasttwelvemonths\n\nforward_dividend_yield\n\nleveredfreecashflow.lasttwelvemonths\n\nleveredfreecashflow1yrgrowth.lasttwelvemonths\n\nunleveredfreecashflow.lasttwelvemonths\n\n\n\n\nesg\n\n\t\n\nenvironmental_score\n\nesg_score\n\ngovernance_score\n\nhighest_controversy\n\nsocial_score\n\nproperty valid_values: Dict\n\nMost operands take number values, but some have a restricted set of valid values.\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\nregion\n\n\t\n\nar, at, au, be, br, ca, ch, cl, cn, co, cz, de, dk, ee, eg, es, fi, fr, gb, gr, hk, hu, id, ie, il, in, is, it, jp, kr, kw, lk, lt, lv, mx, my, nl, no, nz, pe, ph, pk, pl, pt, qa, ro, ru, sa, se, sg, sr, th, tr, tw, us, ve, vn, za\n\n\n\n\nexchange\n\n\t\nar: BUE. at: VIE. au: ASX. be: BRU\nbr: SAO. ca: CNQ, NEO, TOR, VAN\nch: EBS. cl: SGO. cn: SHH, SHZ\nco: BVC. cz: PRA\nde: BER, DUS, FRA, GER, HAM, MUN, STU\ndk: CPH. ee: TAL. eg: CAI. es: MCE\nfi: HEL. fr: PAR. gb: AQS, IOB, LSE\ngr: ATH. hk: HKG. hu: BUD. id: JKT\nie: ISE. il: TLV. in: BSE, NSI\nis: ICE. it: MIL. jp: FKA, JPX, SAP\nkr: KOE, KSC. kw: KUW. lk:\nlt: LIT. lv: RIS. mx: MEX. my: KLS\nnl: AMS. no: OSL. nz: NZE. pe:\nph: PHP, PHS. pk: . pl: WSE\npt: LIS. qa: DOH. ro: BVB. ru:\nsa: SAU. se: STO. sg: SES. sr:\nth: SET. tr: IST. tw: TAI, TWO\nus: ASE, BTS, CXI, NCM, NGM, NMS, NYQ, OEM, OQB, OQX, PCX, PNK, YHD\nve: CCS. vn: . za: JNB\n\n\n\nsector\n\n\t\n\nBasic Materials\n\nCommunication Services\n\nConsumer Cyclical\n\nConsumer Defensive\n\nEnergy\n\nFinancial Services\n\nHealthcare\n\nIndustrials\n\nReal Estate\n\nTechnology\n\nUtilities\n\n\n\n\npeer_group\n\n\t\n\nAerospace & Defense\n\nAuto Components\n\nAutomobiles\n\nBanks\n\nBuilding Products\n\nChemicals\n\nChina Fund Aggressive Allocation Fund\n\nChina Fund Equity Funds\n\nChina Fund QDII Greater China Equity\n\nChina Fund QDII Sector Equity\n\nChina Fund Sector Equity Financial and Real Estate\n\nCommercial Services\n\nConstruction & Engineering\n\nConstruction Materials\n\nConsumer Durables\n\nConsumer Services\n\nContainers & Packaging\n\nDiversified Financials\n\nDiversified Metals\n\nEAA CE Global Large-Cap Blend Equity\n\nEAA CE Other\n\nEAA CE Sector Equity Biotechnology\n\nEAA CE UK Large-Cap Equity\n\nEAA CE UK Small-Cap Equity\n\nEAA Fund Asia ex-Japan Equity\n\nEAA Fund China Equity\n\nEAA Fund China Equity - A Shares\n\nEAA Fund Denmark Equity\n\nEAA Fund EUR Aggressive Allocation - Global\n\nEAA Fund EUR Corporate Bond\n\nEAA Fund EUR Moderate Allocation - Global\n\nEAA Fund Emerging Europe ex-Russia Equity\n\nEAA Fund Europe Large-Cap Blend Equity\n\nEAA Fund Eurozone Large-Cap Equity\n\nEAA Fund Germany Equity\n\nEAA Fund Global Emerging Markets Equity\n\nEAA Fund Global Equity Income\n\nEAA Fund Global Flex-Cap Equity\n\nEAA Fund Global Large-Cap Blend Equity\n\nEAA Fund Global Large-Cap Growth Equity\n\nEAA Fund Hong Kong Equity\n\nEAA Fund Japan Large-Cap Equity\n\nEAA Fund Other Bond\n\nEAA Fund Other Equity\n\nEAA Fund RMB Bond - Onshore\n\nEAA Fund Sector Equity Consumer Goods & Services\n\nEAA Fund Sector Equity Financial Services\n\nEAA Fund Sector Equity Industrial Materials\n\nEAA Fund Sector Equity Technology\n\nEAA Fund South Africa & Namibia Equity\n\nEAA Fund Switzerland Equity\n\nEAA Fund US Large-Cap Blend Equity\n\nEAA Fund USD Corporate Bond\n\nElectrical Equipment\n\nEnergy Services\n\nFood Products\n\nFood Retailers\n\nHealthcare\n\nHomebuilders\n\nHousehold Products\n\nIndia CE Multi-Cap\n\nIndia Fund Large-Cap\n\nIndia Fund Sector - Financial Services\n\nIndustrial Conglomerates\n\nInsurance\n\nMachinery\n\nMedia\n\nMexico Fund Mexico Equity\n\nOil & Gas Producers\n\nPaper & Forestry\n\nPharmaceuticals\n\nPrecious Metals\n\nReal Estate\n\nRefiners & Pipelines\n\nRetailing\n\nSemiconductors\n\nSoftware & Services\n\nSteel\n\nTechnology Hardware\n\nTelecommunication Services\n\nTextiles & Apparel\n\nTraders & Distributors\n\nTransportation\n\nTransportation Infrastructure\n\nUS CE Convertibles\n\nUS CE Options-based\n\nUS CE Preferred Stock\n\nUS Fund China Region\n\nUS Fund Consumer Cyclical\n\nUS Fund Diversified Emerging Mkts\n\nUS Fund Equity Energy\n\nUS Fund Equity Precious Metals\n\nUS Fund Financial\n\nUS Fund Foreign Large Blend\n\nUS Fund Health\n\nUS Fund Large Blend\n\nUS Fund Large Growth\n\nUS Fund Large Value\n\nUS Fund Miscellaneous Region\n\nUS Fund Natural Resources\n\nUS Fund Technology\n\nUS Fund Trading–Leveraged Equity\n\nUtilities\n\nPrevious\n\nScreener & Query\n\nNext\n\nFundQuery\n\n On this page\nEquityQuery\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Screener & Query — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.screener.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nEquityQuery\nFundQuery\nyfinance.screen\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nScreener & Query\nScreener & Query\nQuery Market Data\n\nThe Sector and Industry modules allow you to access the sector and industry information.\n\nEquityQuery(operator, operand)\n\n\t\n\nThe EquityQuery class constructs filters for stocks based on specific criteria such as region, sector, exchange, and peer group.\n\n\n\n\nFundQuery(operator, operand)\n\n\t\n\nThe FundQuery class constructs filters for mutual funds based on specific criteria such as region, sector, exchange, and peer group.\n\n\n\n\nscreen(query[, offset, size, sortField, ...])\n\n\t\n\nRun a screen: predefined query, or custom query.\n\nSee also\n\nEquityQuery.valid_fields\n\nsupported operand values for query\n\nEquityQuery.valid_values\n\nsupported EQ query operand parameters\n\nFundQuery.valid_fields\n\nsupported operand values for query\n\nFundQuery.valid_values\n\nsupported EQ query operand parameters\n\nPrevious\n\nIndustry\n\nNext\n\nEquityQuery\n\n On this page\nQuery Market Data\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Sector — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Sector.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nSector\nIndustry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nSector and Industry\nSector\nSector\nclass yfinance.Sector(key, session=None, proxy=None)\n\nRepresents a financial market sector and allows retrieval of sector-related data such as top ETFs, top mutual funds, and industry data.\n\nParameters\n:\n\nkey (str) – The key representing the sector.\n\nsession (requests.Session, optional) – A session for making requests. Defaults to None.\n\nproxy (dict, optional) – A dictionary containing proxy settings for the request. Defaults to None.\n\nSee also\n\nSector.industries\n\nMap of sector and industry\n\nAttributes\n\nindustries\n\nGets the industries within the sector.\n\nReturns\n:\n\nA DataFrame with industries’ key, name, symbol, and market weight.\n\nReturn type\n:\n\npandas.DataFrame\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\nbasic-materials\n\n\t\n\nagricultural-inputs\n\naluminum\n\nbuilding-materials\n\nchemicals\n\ncoking-coal\n\ncopper\n\ngold\n\nlumber-wood-production\n\nother-industrial-metals-mining\n\nother-precious-metals-mining\n\npaper-paper-products\n\nsilver\n\nspecialty-chemicals\n\nsteel\n\n\n\n\ncommunication-services\n\n\t\n\nadvertising-agencies\n\nbroadcasting\n\nelectronic-gaming-multimedia\n\nentertainment\n\ninternet-content-information\n\npublishing\n\ntelecom-services\n\n\n\n\nconsumer-cyclical\n\n\t\n\napparel-manufacturing\n\napparel-retail\n\nauto-manufacturers\n\nauto-parts\n\nauto-truck-dealerships\n\ndepartment-stores\n\nfootwear-accessories\n\nfurnishings-fixtures-appliances\n\ngambling\n\nhome-improvement-retail\n\ninternet-retail\n\nleisure\n\nlodging\n\nluxury-goods\n\npackaging-containers\n\npersonal-services\n\nrecreational-vehicles\n\nresidential-construction\n\nresorts-casinos\n\nrestaurants\n\nspecialty-retail\n\ntextile-manufacturing\n\ntravel-services\n\n\n\n\nconsumer-defensive\n\n\t\n\nbeverages-brewers\n\nbeverages-non-alcoholic\n\nbeverages-wineries-distilleries\n\nconfectioners\n\ndiscount-stores\n\neducation-training-services\n\nfarm-products\n\nfood-distribution\n\ngrocery-stores\n\nhousehold-personal-products\n\npackaged-foods\n\ntobacco\n\n\n\n\nenergy\n\n\t\n\noil-gas-drilling\n\noil-gas-e-p\n\noil-gas-equipment-services\n\noil-gas-integrated\n\noil-gas-midstream\n\noil-gas-refining-marketing\n\nthermal-coal\n\nuranium\n\n\n\n\nfinancial-services\n\n\t\n\nasset-management\n\nbanks-diversified\n\nbanks-regional\n\ncapital-markets\n\ncredit-services\n\nfinancial-conglomerates\n\nfinancial-data-stock-exchanges\n\ninsurance-brokers\n\ninsurance-diversified\n\ninsurance-life\n\ninsurance-property-casualty\n\ninsurance-reinsurance\n\ninsurance-specialty\n\nmortgage-finance\n\nshell-companies\n\n\n\n\nhealthcare\n\n\t\n\nbiotechnology\n\ndiagnostics-research\n\ndrug-manufacturers-general\n\ndrug-manufacturers-specialty-generic\n\nhealth-information-services\n\nhealthcare-plans\n\nmedical-care-facilities\n\nmedical-devices\n\nmedical-distribution\n\nmedical-instruments-supplies\n\npharmaceutical-retailers\n\n\n\n\nindustrials\n\n\t\n\naerospace-defense\n\nairlines\n\nairports-air-services\n\nbuilding-products-equipment\n\nbusiness-equipment-supplies\n\nconglomerates\n\nconsulting-services\n\nelectrical-equipment-parts\n\nengineering-construction\n\nfarm-heavy-construction-machinery\n\nindustrial-distribution\n\ninfrastructure-operations\n\nintegrated-freight-logistics\n\nmarine-shipping\n\nmetal-fabrication\n\npollution-treatment-controls\n\nrailroads\n\nrental-leasing-services\n\nsecurity-protection-services\n\nspecialty-business-services\n\nspecialty-industrial-machinery\n\nstaffing-employment-services\n\ntools-accessories\n\ntrucking\n\nwaste-management\n\n\n\n\nreal-estate\n\n\t\n\nreal-estate-development\n\nreal-estate-diversified\n\nreal-estate-services\n\nreit-diversified\n\nreit-healthcare-facilities\n\nreit-hotel-motel\n\nreit-industrial\n\nreit-mortgage\n\nreit-office\n\nreit-residential\n\nreit-retail\n\nreit-specialty\n\n\n\n\ntechnology\n\n\t\n\ncommunication-equipment\n\ncomputer-hardware\n\nconsumer-electronics\n\nelectronic-components\n\nelectronics-computer-distribution\n\ninformation-technology-services\n\nscientific-technical-instruments\n\nsemiconductor-equipment-materials\n\nsemiconductors\n\nsoftware-application\n\nsoftware-infrastructure\n\nsolar\n\n\n\n\nutilities\n\n\t\n\nutilities-diversified\n\nutilities-independent-power-producers\n\nutilities-regulated-electric\n\nutilities-regulated-gas\n\nutilities-regulated-water\n\nutilities-renewable\n\nkey\n\nRetrieves the key of the domain entity.\n\nReturns\n:\n\nThe unique key of the domain entity.\n\nReturn type\n:\n\nstr\n\nname\n\nRetrieves the name of the domain entity.\n\nReturns\n:\n\nThe name of the domain entity.\n\nReturn type\n:\n\nstr\n\noverview\n\nRetrieves the overview information of the domain entity.\n\nReturns\n:\n\nA dictionary containing an overview of the domain entity.\n\nReturn type\n:\n\nDict\n\nresearch_reports\n\nRetrieves research reports related to the domain entity.\n\nReturns\n:\n\nA list of research reports, where each report is a dictionary with metadata.\n\nReturn type\n:\n\nList[Dict[str, str]]\n\nsymbol\n\nRetrieves the symbol of the domain entity.\n\nReturns\n:\n\nThe symbol representing the domain entity.\n\nReturn type\n:\n\nstr\n\nticker\n\nRetrieves a Ticker object based on the domain entity’s symbol.\n\nReturns\n:\n\nA Ticker object associated with the domain entity.\n\nReturn type\n:\n\nTicker\n\ntop_companies\n\nRetrieves the top companies within the domain entity.\n\nReturns\n:\n\nA DataFrame containing the top companies in the domain.\n\nReturn type\n:\n\npandas.DataFrame\n\ntop_etfs\n\nGets the top ETFs for the sector.\n\nReturns\n:\n\nA dictionary of ETF symbols and names.\n\nReturn type\n:\n\nDict[str, str]\n\ntop_mutual_funds\n\nGets the top mutual funds for the sector.\n\nReturns\n:\n\nA dictionary of mutual fund symbols and names.\n\nReturn type\n:\n\nDict[str, str]\n\nMethods\n\n__init__(key, session=None, proxy=None)\nParameters\n:\n\nkey (str) – The key representing the sector.\n\nsession (requests.Session, optional) – A session for making requests. Defaults to None.\n\nproxy (dict, optional) – A dictionary containing proxy settings for the request. Defaults to None.\n\nSee also\n\nSector.industries\n\nMap of sector and industry\n\nproperty industries: DataFrame\n\nGets the industries within the sector.\n\nReturns\n:\n\nA DataFrame with industries’ key, name, symbol, and market weight.\n\nReturn type\n:\n\npandas.DataFrame\n\nPermitted Keys/Values\n\nKey\n\n\t\n\nValues\n\n\n\n\nbasic-materials\n\n\t\n\nagricultural-inputs\n\naluminum\n\nbuilding-materials\n\nchemicals\n\ncoking-coal\n\ncopper\n\ngold\n\nlumber-wood-production\n\nother-industrial-metals-mining\n\nother-precious-metals-mining\n\npaper-paper-products\n\nsilver\n\nspecialty-chemicals\n\nsteel\n\n\n\n\ncommunication-services\n\n\t\n\nadvertising-agencies\n\nbroadcasting\n\nelectronic-gaming-multimedia\n\nentertainment\n\ninternet-content-information\n\npublishing\n\ntelecom-services\n\n\n\n\nconsumer-cyclical\n\n\t\n\napparel-manufacturing\n\napparel-retail\n\nauto-manufacturers\n\nauto-parts\n\nauto-truck-dealerships\n\ndepartment-stores\n\nfootwear-accessories\n\nfurnishings-fixtures-appliances\n\ngambling\n\nhome-improvement-retail\n\ninternet-retail\n\nleisure\n\nlodging\n\nluxury-goods\n\npackaging-containers\n\npersonal-services\n\nrecreational-vehicles\n\nresidential-construction\n\nresorts-casinos\n\nrestaurants\n\nspecialty-retail\n\ntextile-manufacturing\n\ntravel-services\n\n\n\n\nconsumer-defensive\n\n\t\n\nbeverages-brewers\n\nbeverages-non-alcoholic\n\nbeverages-wineries-distilleries\n\nconfectioners\n\ndiscount-stores\n\neducation-training-services\n\nfarm-products\n\nfood-distribution\n\ngrocery-stores\n\nhousehold-personal-products\n\npackaged-foods\n\ntobacco\n\n\n\n\nenergy\n\n\t\n\noil-gas-drilling\n\noil-gas-e-p\n\noil-gas-equipment-services\n\noil-gas-integrated\n\noil-gas-midstream\n\noil-gas-refining-marketing\n\nthermal-coal\n\nuranium\n\n\n\n\nfinancial-services\n\n\t\n\nasset-management\n\nbanks-diversified\n\nbanks-regional\n\ncapital-markets\n\ncredit-services\n\nfinancial-conglomerates\n\nfinancial-data-stock-exchanges\n\ninsurance-brokers\n\ninsurance-diversified\n\ninsurance-life\n\ninsurance-property-casualty\n\ninsurance-reinsurance\n\ninsurance-specialty\n\nmortgage-finance\n\nshell-companies\n\n\n\n\nhealthcare\n\n\t\n\nbiotechnology\n\ndiagnostics-research\n\ndrug-manufacturers-general\n\ndrug-manufacturers-specialty-generic\n\nhealth-information-services\n\nhealthcare-plans\n\nmedical-care-facilities\n\nmedical-devices\n\nmedical-distribution\n\nmedical-instruments-supplies\n\npharmaceutical-retailers\n\n\n\n\nindustrials\n\n\t\n\naerospace-defense\n\nairlines\n\nairports-air-services\n\nbuilding-products-equipment\n\nbusiness-equipment-supplies\n\nconglomerates\n\nconsulting-services\n\nelectrical-equipment-parts\n\nengineering-construction\n\nfarm-heavy-construction-machinery\n\nindustrial-distribution\n\ninfrastructure-operations\n\nintegrated-freight-logistics\n\nmarine-shipping\n\nmetal-fabrication\n\npollution-treatment-controls\n\nrailroads\n\nrental-leasing-services\n\nsecurity-protection-services\n\nspecialty-business-services\n\nspecialty-industrial-machinery\n\nstaffing-employment-services\n\ntools-accessories\n\ntrucking\n\nwaste-management\n\n\n\n\nreal-estate\n\n\t\n\nreal-estate-development\n\nreal-estate-diversified\n\nreal-estate-services\n\nreit-diversified\n\nreit-healthcare-facilities\n\nreit-hotel-motel\n\nreit-industrial\n\nreit-mortgage\n\nreit-office\n\nreit-residential\n\nreit-retail\n\nreit-specialty\n\n\n\n\ntechnology\n\n\t\n\ncommunication-equipment\n\ncomputer-hardware\n\nconsumer-electronics\n\nelectronic-components\n\nelectronics-computer-distribution\n\ninformation-technology-services\n\nscientific-technical-instruments\n\nsemiconductor-equipment-materials\n\nsemiconductors\n\nsoftware-application\n\nsoftware-infrastructure\n\nsolar\n\n\n\n\nutilities\n\n\t\n\nutilities-diversified\n\nutilities-independent-power-producers\n\nutilities-regulated-electric\n\nutilities-regulated-gas\n\nutilities-regulated-water\n\nutilities-renewable\n\nproperty top_etfs: Dict[str, str]\n\nGets the top ETFs for the sector.\n\nReturns\n:\n\nA dictionary of ETF symbols and names.\n\nReturn type\n:\n\nDict[str, str]\n\nproperty top_mutual_funds: Dict[str, str]\n\nGets the top mutual funds for the sector.\n\nReturns\n:\n\nA dictionary of mutual fund symbols and names.\n\nReturn type\n:\n\nDict[str, str]\n\nPrevious\n\nSector and Industry\n\nNext\n\nIndustry\n\n On this page\nSector\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Industry — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Industry.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nSector\nIndustry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nSector and Industry\nIndustry\nIndustry\nclass yfinance.Industry(key, session=None, proxy=None)\n\nRepresents an industry within a sector.\n\nParameters\n:\n\nkey (str) – The key identifier for the industry.\n\nsession (optional) – The session to use for requests.\n\nproxy (optional) – The proxy to use for requests.\n\nAttributes\n\nkey\n\nRetrieves the key of the domain entity.\n\nReturns\n:\n\nThe unique key of the domain entity.\n\nReturn type\n:\n\nstr\n\nname\n\nRetrieves the name of the domain entity.\n\nReturns\n:\n\nThe name of the domain entity.\n\nReturn type\n:\n\nstr\n\noverview\n\nRetrieves the overview information of the domain entity.\n\nReturns\n:\n\nA dictionary containing an overview of the domain entity.\n\nReturn type\n:\n\nDict\n\nresearch_reports\n\nRetrieves research reports related to the domain entity.\n\nReturns\n:\n\nA list of research reports, where each report is a dictionary with metadata.\n\nReturn type\n:\n\nList[Dict[str, str]]\n\nsector_key\n\nReturns the sector key of the industry.\n\nReturns\n:\n\nThe sector key.\n\nReturn type\n:\n\nstr\n\nsector_name\n\nReturns the sector name of the industry.\n\nReturns\n:\n\nThe sector name.\n\nReturn type\n:\n\nstr\n\nsymbol\n\nRetrieves the symbol of the domain entity.\n\nReturns\n:\n\nThe symbol representing the domain entity.\n\nReturn type\n:\n\nstr\n\nticker\n\nRetrieves a Ticker object based on the domain entity’s symbol.\n\nReturns\n:\n\nA Ticker object associated with the domain entity.\n\nReturn type\n:\n\nTicker\n\ntop_companies\n\nRetrieves the top companies within the domain entity.\n\nReturns\n:\n\nA DataFrame containing the top companies in the domain.\n\nReturn type\n:\n\npandas.DataFrame\n\ntop_growth_companies\n\nReturns the top growth companies in the industry.\n\nReturns\n:\n\nDataFrame containing top growth companies.\n\nReturn type\n:\n\nOptional[pd.DataFrame]\n\ntop_performing_companies\n\nReturns the top performing companies in the industry.\n\nReturns\n:\n\nDataFrame containing top performing companies.\n\nReturn type\n:\n\nOptional[pd.DataFrame]\n\nMethods\n\n__init__(key, session=None, proxy=None)\nParameters\n:\n\nkey (str) – The key identifier for the industry.\n\nsession (optional) – The session to use for requests.\n\nproxy (optional) – The proxy to use for requests.\n\nproperty sector_key: str\n\nReturns the sector key of the industry.\n\nReturns\n:\n\nThe sector key.\n\nReturn type\n:\n\nstr\n\nproperty sector_name: str\n\nReturns the sector name of the industry.\n\nReturns\n:\n\nThe sector name.\n\nReturn type\n:\n\nstr\n\nproperty top_growth_companies: DataFrame | None\n\nReturns the top growth companies in the industry.\n\nReturns\n:\n\nDataFrame containing top growth companies.\n\nReturn type\n:\n\nOptional[pd.DataFrame]\n\nproperty top_performing_companies: DataFrame | None\n\nReturns the top performing companies in the industry.\n\nReturns\n:\n\nDataFrame containing top performing companies.\n\nReturn type\n:\n\nOptional[pd.DataFrame]\n\nPrevious\n\nSector\n\nNext\n\nScreener & Query\n\n On this page\nIndustry\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Sector and Industry — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.sector_industry.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nSector\nIndustry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nSector and Industry\nSector and Industry\nSector class\n\nThe Sector and Industry modules provide access to the Sector and Industry information.\n\nSector(key[, session, proxy])\n\n\t\n\nRepresents a financial market sector and allows retrieval of sector-related data such as top ETFs, top mutual funds, and industry data.\n\n\n\n\nIndustry(key[, session, proxy])\n\n\t\n\nRepresents an industry within a sector.\n\nSee also\n\nSector.industries\n\nMap of sector and industry\n\nSample Code\n\nTo initialize, use the relevant sector or industry key as below.\n\nimport yfinance as yf\n\ntech = yf.Sector('technology')\nsoftware = yf.Industry('software-infrastructure')\n\n# Common information\ntech.key\ntech.name\ntech.symbol\ntech.ticker\ntech.overview\ntech.top_companies\ntech.research_reports\n\n# Sector information\ntech.top_etfs\ntech.top_mutual_funds\ntech.industries\n\n# Industry information\nsoftware.sector_key\nsoftware.sector_name\nsoftware.top_performing_companies\nsoftware.top_growth_companies\n\n\n\nThe modules can be chained with Ticker as below.\n\nimport yfinance as yf\n# Ticker to Sector and Industry\nmsft = yf.Ticker('MSFT')\ntech = yf.Sector(msft.info.get('sectorKey'))\nsoftware = yf.Industry(msft.info.get('industryKey'))\n\n# Sector and Industry to Ticker\ntech_ticker = tech.ticker\ntech_ticker.info\nsoftware_ticker = software.ticker\nsoftware_ticker.history()\n\n\nPrevious\n\nSearch\n\nNext\n\nSector\n\n On this page\nSector class\nSample Code\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Search — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Search.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSearch\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nSearch & News\nSearch\nSearch\nclass yfinance.Search(query, max_results=8, news_count=8, lists_count=8, include_cb=True, include_nav_links=False, include_research=False, include_cultural_assets=False, enable_fuzzy_query=False, recommended=8, session=None, proxy=None, timeout=30, raise_errors=True)\n\nFetches and organizes search results from Yahoo Finance, including stock quotes and news articles.\n\nParameters\n:\n\nquery – The search query (ticker symbol or company name).\n\nmax_results – Maximum number of stock quotes to return (default 8).\n\nnews_count – Number of news articles to include (default 8).\n\nlists_count – Number of lists to include (default 8).\n\ninclude_cb – Include the company breakdown (default True).\n\ninclude_nav_links – Include the navigation links (default False).\n\ninclude_research – Include the research reports (default False).\n\ninclude_cultural_assets – Include the cultural assets (default False).\n\nenable_fuzzy_query – Enable fuzzy search for typos (default False).\n\nrecommended – Recommended number of results to return (default 8).\n\nsession – Custom HTTP session for requests (default None).\n\nproxy – Proxy settings for requests (default None).\n\ntimeout – Request timeout in seconds (default 30).\n\nraise_errors – Raise exceptions on error (default True).\n\nAttributes\n\nall\n\nfiltered down version of response.\n\nType\n:\n\nGet all the results from the search results\n\nlists\n\nGet the lists from the search results.\n\nnav\n\nGet the navigation links from the search results.\n\nnews\n\nGet the news from the search results.\n\nquotes\n\nGet the quotes from the search results.\n\nresearch\n\nGet the research reports from the search results.\n\nresponse\n\nGet the raw response from the search results.\n\nMethods\n\n__init__(query, max_results=8, news_count=8, lists_count=8, include_cb=True, include_nav_links=False, include_research=False, include_cultural_assets=False, enable_fuzzy_query=False, recommended=8, session=None, proxy=None, timeout=30, raise_errors=True)\n\nFetches and organizes search results from Yahoo Finance, including stock quotes and news articles.\n\nParameters\n:\n\nquery – The search query (ticker symbol or company name).\n\nmax_results – Maximum number of stock quotes to return (default 8).\n\nnews_count – Number of news articles to include (default 8).\n\nlists_count – Number of lists to include (default 8).\n\ninclude_cb – Include the company breakdown (default True).\n\ninclude_nav_links – Include the navigation links (default False).\n\ninclude_research – Include the research reports (default False).\n\ninclude_cultural_assets – Include the cultural assets (default False).\n\nenable_fuzzy_query – Enable fuzzy search for typos (default False).\n\nrecommended – Recommended number of results to return (default 8).\n\nsession – Custom HTTP session for requests (default None).\n\nproxy – Proxy settings for requests (default None).\n\ntimeout – Request timeout in seconds (default 30).\n\nraise_errors – Raise exceptions on error (default True).\n\nsearch() → Search\n\nSearch using the query parameters defined in the constructor.\n\nproperty all: dict[str, list]\n\nfiltered down version of response.\n\nType\n:\n\nGet all the results from the search results\n\nproperty lists: list\n\nGet the lists from the search results.\n\nproperty nav: list\n\nGet the navigation links from the search results.\n\nproperty news: list\n\nGet the news from the search results.\n\nproperty quotes: list\n\nGet the quotes from the search results.\n\nproperty research: list\n\nGet the research reports from the search results.\n\nproperty response: dict\n\nGet the raw response from the search results.\n\nsearch() → Search\n\nSearch using the query parameters defined in the constructor.\n\nPrevious\n\nSearch & News\n\nNext\n\nSector and Industry\n\n On this page\nSearch\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Search & News — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.search.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSearch\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nSearch & News\nSearch & News\nClass\n\nThe Search module, allows you to access search data in a Pythonic way.\n\nSearch(query[, max_results, news_count, ...])\n\n\t\n\nFetches and organizes search results from Yahoo Finance, including stock quotes and news articles.\n\nSearch Sample Code\n\nThe Search module, allows you to access search data in a Pythonic way.\n\nimport yfinance as yf\n\n# get list of quotes\nquotes = yf.Search(\"AAPL\", max_results=10).quotes\n\n# get list of news\nnews = yf.Search(\"Google\", news_count=10).news\n\n# get list of related research\nresearch = yf.Search(\"apple\", include_research=True).research\n\n\nPrevious\n\nyfinance.Ticker.mutualfund_holders\n\nNext\n\nSearch\n\n On this page\nClass\nSearch Sample Code\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.mutualfund_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.mutualfund_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.mutualfund_holders\nproperty Ticker.mutualfund_holders: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_mutualfund_holders\n\nNext\n\nSearch & News\n\n On this page\nTicker.mutualfund_holders\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_mutualfund_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_mutualfund_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_mutualfund_holders\nTicker.get_mutualfund_holders(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.institutional_holders\n\nNext\n\nyfinance.Ticker.mutualfund_holders\n\n On this page\nTicker.get_mutualfund_holders()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.institutional_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.institutional_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.institutional_holders\nproperty Ticker.institutional_holders: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_institutional_holders\n\nNext\n\nyfinance.Ticker.get_mutualfund_holders\n\n On this page\nTicker.institutional_holders\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_institutional_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_institutional_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_institutional_holders\nTicker.get_institutional_holders(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.major_holders\n\nNext\n\nyfinance.Ticker.institutional_holders\n\n On this page\nTicker.get_institutional_holders()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.major_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.major_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.major_holders\nproperty Ticker.major_holders: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_major_holders\n\nNext\n\nyfinance.Ticker.get_institutional_holders\n\n On this page\nTicker.major_holders\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_major_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_major_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_major_holders\nTicker.get_major_holders(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.insider_roster_holders\n\nNext\n\nyfinance.Ticker.major_holders\n\n On this page\nTicker.get_major_holders()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_insider_roster_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_insider_roster_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_insider_roster_holders\nTicker.get_insider_roster_holders(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.insider_transactions\n\nNext\n\nyfinance.Ticker.insider_roster_holders\n\n On this page\nTicker.get_insider_roster_holders()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.insider_roster_holders — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.insider_roster_holders.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.insider_roster_holders\nproperty Ticker.insider_roster_holders: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_insider_roster_holders\n\nNext\n\nyfinance.Ticker.get_major_holders\n\n On this page\nTicker.insider_roster_holders\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.insider_transactions — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.insider_transactions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.insider_transactions\nproperty Ticker.insider_transactions: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_insider_transactions\n\nNext\n\nyfinance.Ticker.get_insider_roster_holders\n\n On this page\nTicker.insider_transactions\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_insider_transactions — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_insider_transactions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_insider_transactions\nTicker.get_insider_transactions(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.insider_purchases\n\nNext\n\nyfinance.Ticker.insider_transactions\n\n On this page\nTicker.get_insider_transactions()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.insider_purchases — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.insider_purchases.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.insider_purchases\nproperty Ticker.insider_purchases: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_insider_purchases\n\nNext\n\nyfinance.Ticker.get_insider_transactions\n\n On this page\nTicker.insider_purchases\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_insider_purchases — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_insider_purchases.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_insider_purchases\nTicker.get_insider_purchases(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.funds_data\n\nNext\n\nyfinance.Ticker.insider_purchases\n\n On this page\nTicker.get_insider_purchases()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.funds_data — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.funds_data.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.funds_data\nproperty Ticker.funds_data: FundsData\n\nPrevious\n\nyfinance.Ticker.get_funds_data\n\nNext\n\nyfinance.Ticker.get_insider_purchases\n\n On this page\nTicker.funds_data\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_funds_data — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_funds_data.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_funds_data\nTicker.get_funds_data(proxy=None) → FundsData | None\n\nPrevious\n\nyfinance.Ticker.growth_estimates\n\nNext\n\nyfinance.Ticker.funds_data\n\n On this page\nTicker.get_funds_data()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.growth_estimates — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.growth_estimates.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.growth_estimates\nproperty Ticker.growth_estimates: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_growth_estimates\n\nNext\n\nyfinance.Ticker.get_funds_data\n\n On this page\nTicker.growth_estimates\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_growth_estimates — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_growth_estimates.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_growth_estimates\nTicker.get_growth_estimates(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y +5y -5y Columns: stock industry sector index\n\nPrevious\n\nyfinance.Ticker.eps_revisions\n\nNext\n\nyfinance.Ticker.growth_estimates\n\n On this page\nTicker.get_growth_estimates()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.eps_revisions — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.eps_revisions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.eps_revisions\nproperty Ticker.eps_revisions: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_eps_revisions\n\nNext\n\nyfinance.Ticker.get_growth_estimates\n\n On this page\nTicker.eps_revisions\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_eps_revisions — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_eps_revisions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_eps_revisions\nTicker.get_eps_revisions(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: upLast7days upLast30days downLast7days downLast30days\n\nPrevious\n\nyfinance.Ticker.eps_trend\n\nNext\n\nyfinance.Ticker.eps_revisions\n\n On this page\nTicker.get_eps_revisions()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.eps_trend — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.eps_trend.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.eps_trend\nproperty Ticker.eps_trend: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_eps_trend\n\nNext\n\nyfinance.Ticker.get_eps_revisions\n\n On this page\nTicker.eps_trend\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_eps_trend — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_eps_trend.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_eps_trend\nTicker.get_eps_trend(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: current 7daysAgo 30daysAgo 60daysAgo 90daysAgo\n\nPrevious\n\nyfinance.Ticker.earnings_history\n\nNext\n\nyfinance.Ticker.eps_trend\n\n On this page\nTicker.get_eps_trend()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.earnings_history — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.earnings_history.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.earnings_history\nproperty Ticker.earnings_history: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_earnings_history\n\nNext\n\nyfinance.Ticker.get_eps_trend\n\n On this page\nTicker.earnings_history\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_earnings_history — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_earnings_history.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_earnings_history\nTicker.get_earnings_history(proxy=None, as_dict=False)\n\nIndex: pd.DatetimeIndex Columns: epsEstimate epsActual epsDifference surprisePercent\n\nPrevious\n\nyfinance.Ticker.revenue_estimate\n\nNext\n\nyfinance.Ticker.earnings_history\n\n On this page\nTicker.get_earnings_history()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.revenue_estimate — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.revenue_estimate.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.revenue_estimate\nproperty Ticker.revenue_estimate: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_revenue_estimate\n\nNext\n\nyfinance.Ticker.get_earnings_history\n\n On this page\nTicker.revenue_estimate\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_revenue_estimate — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_revenue_estimate.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_revenue_estimate\nTicker.get_revenue_estimate(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: numberOfAnalysts avg low high yearAgoRevenue growth\n\nPrevious\n\nyfinance.Ticker.earnings_estimate\n\nNext\n\nyfinance.Ticker.revenue_estimate\n\n On this page\nTicker.get_revenue_estimate()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.earnings_estimate — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.earnings_estimate.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.earnings_estimate\nproperty Ticker.earnings_estimate: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_earnings_estimate\n\nNext\n\nyfinance.Ticker.get_revenue_estimate\n\n On this page\nTicker.earnings_estimate\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_earnings_estimate — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_earnings_estimate.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_earnings_estimate\nTicker.get_earnings_estimate(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: numberOfAnalysts avg low high yearAgoEps growth\n\nPrevious\n\nyfinance.Ticker.analyst_price_targets\n\nNext\n\nyfinance.Ticker.earnings_estimate\n\n On this page\nTicker.get_earnings_estimate()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.analyst_price_targets — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.analyst_price_targets.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.analyst_price_targets\nproperty Ticker.analyst_price_targets: dict\n\nPrevious\n\nyfinance.Ticker.get_analyst_price_targets\n\nNext\n\nyfinance.Ticker.get_earnings_estimate\n\n On this page\nTicker.analyst_price_targets\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_analyst_price_targets — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_analyst_price_targets.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_analyst_price_targets\nTicker.get_analyst_price_targets(proxy=None) → dict\n\nKeys: current low high mean median\n\nPrevious\n\nyfinance.Ticker.sustainability\n\nNext\n\nyfinance.Ticker.analyst_price_targets\n\n On this page\nTicker.get_analyst_price_targets()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.sustainability — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.sustainability.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.sustainability\nproperty Ticker.sustainability: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_sustainability\n\nNext\n\nyfinance.Ticker.get_analyst_price_targets\n\n On this page\nTicker.sustainability\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_sustainability — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_sustainability.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_sustainability\nTicker.get_sustainability(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.upgrades_downgrades\n\nNext\n\nyfinance.Ticker.sustainability\n\n On this page\nTicker.get_sustainability()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.upgrades_downgrades — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.upgrades_downgrades.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.upgrades_downgrades\nproperty Ticker.upgrades_downgrades\n\nPrevious\n\nyfinance.Ticker.get_upgrades_downgrades\n\nNext\n\nyfinance.Ticker.get_sustainability\n\n On this page\nTicker.upgrades_downgrades\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_upgrades_downgrades — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_upgrades_downgrades.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_upgrades_downgrades\nTicker.get_upgrades_downgrades(proxy=None, as_dict=False)\n\nReturns a DataFrame with the recommendations changes (upgrades/downgrades) Index: date of grade Columns: firm toGrade fromGrade action\n\nPrevious\n\nyfinance.Ticker.recommendations_summary\n\nNext\n\nyfinance.Ticker.upgrades_downgrades\n\n On this page\nTicker.get_upgrades_downgrades()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_recommendations_summary — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_recommendations_summary.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_recommendations_summary\nTicker.get_recommendations_summary(proxy=None, as_dict=False)\n\nPrevious\n\nyfinance.Ticker.recommendations\n\nNext\n\nyfinance.Ticker.recommendations_summary\n\n On this page\nTicker.get_recommendations_summary()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.recommendations_summary — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.recommendations_summary.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.recommendations_summary\nproperty Ticker.recommendations_summary\n\nPrevious\n\nyfinance.Ticker.get_recommendations_summary\n\nNext\n\nyfinance.Ticker.get_upgrades_downgrades\n\n On this page\nTicker.recommendations_summary\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.recommendations — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.recommendations.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.recommendations\nproperty Ticker.recommendations\n\nPrevious\n\nyfinance.Ticker.get_recommendations\n\nNext\n\nyfinance.Ticker.get_recommendations_summary\n\n On this page\nTicker.recommendations\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_recommendations — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_recommendations.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis & Holdings\nyfinance.Tic...\nyfinance.Ticker.get_recommendations\nTicker.get_recommendations(proxy=None, as_dict=False)\n\nReturns a DataFrame with the recommendations Columns: period strongBuy buy hold sell strongSell\n\nPrevious\n\nAnalysis & Holdings\n\nNext\n\nyfinance.Ticker.recommendations\n\n On this page\nTicker.get_recommendations()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Analysis & Holdings — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.analysis.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nyfinance.Ticker.get_recommendations\nyfinance.Ticker.recommendations\nyfinance.Ticker.get_recommendations_summary\nyfinance.Ticker.recommendations_summary\nyfinance.Ticker.get_upgrades_downgrades\nyfinance.Ticker.upgrades_downgrades\nyfinance.Ticker.get_sustainability\nyfinance.Ticker.sustainability\nyfinance.Ticker.get_analyst_price_targets\nyfinance.Ticker.analyst_price_targets\nyfinance.Ticker.get_earnings_estimate\nyfinance.Ticker.earnings_estimate\nyfinance.Ticker.get_revenue_estimate\nyfinance.Ticker.revenue_estimate\nyfinance.Ticker.get_earnings_history\nyfinance.Ticker.earnings_history\nyfinance.Ticker.get_eps_trend\nyfinance.Ticker.eps_trend\nyfinance.Ticker.get_eps_revisions\nyfinance.Ticker.eps_revisions\nyfinance.Ticker.get_growth_estimates\nyfinance.Ticker.growth_estimates\nyfinance.Ticker.get_funds_data\nyfinance.Ticker.funds_data\nyfinance.Ticker.get_insider_purchases\nyfinance.Ticker.insider_purchases\nyfinance.Ticker.get_insider_transactions\nyfinance.Ticker.insider_transactions\nyfinance.Ticker.get_insider_roster_holders\nyfinance.Ticker.insider_roster_holders\nyfinance.Ticker.get_major_holders\nyfinance.Ticker.major_holders\nyfinance.Ticker.get_institutional_holders\nyfinance.Ticker.institutional_holders\nyfinance.Ticker.get_mutualfund_holders\nyfinance.Ticker.mutualfund_holders\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAnalysis...\nAnalysis & Holdings\nAnalysis\n\nget_recommendations([proxy, as_dict])\n\n\t\n\nReturns a DataFrame with the recommendations Columns: period strongBuy buy hold sell strongSell\n\n\n\n\nrecommendations\n\n\t\n\n\n\n\nget_recommendations_summary([proxy, as_dict])\n\n\t\n\n\n\n\nrecommendations_summary\n\n\t\n\n\n\n\nget_upgrades_downgrades([proxy, as_dict])\n\n\t\n\nReturns a DataFrame with the recommendations changes (upgrades/downgrades) Index: date of grade Columns: firm toGrade fromGrade action\n\n\n\n\nupgrades_downgrades\n\n\t\n\n\n\n\nget_sustainability([proxy, as_dict])\n\n\t\n\n\n\n\nsustainability\n\n\t\n\n\n\n\nget_analyst_price_targets([proxy])\n\n\t\n\nKeys: current low high mean median\n\n\n\n\nanalyst_price_targets\n\n\t\n\n\n\n\nget_earnings_estimate([proxy, as_dict])\n\n\t\n\nIndex: 0q +1q 0y +1y Columns: numberOfAnalysts avg low high yearAgoEps growth\n\n\n\n\nearnings_estimate\n\n\t\n\n\n\n\nget_revenue_estimate([proxy, as_dict])\n\n\t\n\nIndex: 0q +1q 0y +1y Columns: numberOfAnalysts avg low high yearAgoRevenue growth\n\n\n\n\nrevenue_estimate\n\n\t\n\n\n\n\nget_earnings_history([proxy, as_dict])\n\n\t\n\nIndex: pd.DatetimeIndex Columns: epsEstimate epsActual epsDifference surprisePercent\n\n\n\n\nearnings_history\n\n\t\n\n\n\n\nget_eps_trend([proxy, as_dict])\n\n\t\n\nIndex: 0q +1q 0y +1y Columns: current 7daysAgo 30daysAgo 60daysAgo 90daysAgo\n\n\n\n\neps_trend\n\n\t\n\n\n\n\nget_eps_revisions([proxy, as_dict])\n\n\t\n\nIndex: 0q +1q 0y +1y Columns: upLast7days upLast30days downLast7days downLast30days\n\n\n\n\neps_revisions\n\n\t\n\n\n\n\nget_growth_estimates([proxy, as_dict])\n\n\t\n\nIndex: 0q +1q 0y +1y +5y -5y Columns: stock industry sector index\n\n\n\n\ngrowth_estimates\n\n\t\n\nHoldings\n\nget_funds_data([proxy])\n\n\t\n\n\n\n\nfunds_data\n\n\t\n\nSee also\n\nyfinance.scrapers.funds.FundsData()\n\nget_insider_purchases([proxy, as_dict])\n\n\t\n\n\n\n\ninsider_purchases\n\n\t\n\n\n\n\nget_insider_transactions([proxy, as_dict])\n\n\t\n\n\n\n\ninsider_transactions\n\n\t\n\n\n\n\nget_insider_roster_holders([proxy, as_dict])\n\n\t\n\n\n\n\ninsider_roster_holders\n\n\t\n\n\n\n\nget_major_holders([proxy, as_dict])\n\n\t\n\n\n\n\nmajor_holders\n\n\t\n\n\n\n\nget_institutional_holders([proxy, as_dict])\n\n\t\n\n\n\n\ninstitutional_holders\n\n\t\n\n\n\n\nget_mutualfund_holders([proxy, as_dict])\n\n\t\n\n\n\n\nmutualfund_holders\n\n\t\n\nPrevious\n\nyfinance.Ticker.sec_filings\n\nNext\n\nyfinance.Ticker.get_recommendations\n\n On this page\nAnalysis\nHoldings\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.sec_filings — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.sec_filings.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.sec_filings\nproperty Ticker.sec_filings: dict\n\nPrevious\n\nyfinance.Ticker.get_sec_filings\n\nNext\n\nAnalysis & Holdings\n\n On this page\nTicker.sec_filings\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_sec_filings — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_sec_filings.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.get_sec_filings\nTicker.get_sec_filings(proxy=None) → dict\n\nPrevious\n\nyfinance.Ticker.earnings_dates\n\nNext\n\nyfinance.Ticker.sec_filings\n\n On this page\nTicker.get_sec_filings()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.earnings_dates — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.earnings_dates.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.earnings_dates\nproperty Ticker.earnings_dates: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_earnings_dates\n\nNext\n\nyfinance.Ticker.get_sec_filings\n\n On this page\nTicker.earnings_dates\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_earnings_dates — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_earnings_dates.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.get_earnings_dates\nTicker.get_earnings_dates(limit=12, proxy=None) → DataFrame | None\n\nGet earning dates (future and historic)\n\nParameters\n:\n\nlimit (int) – max amount of upcoming and recent earnings dates to return. Default value 12 should return next 4 quarters and last 8 quarters. Increase if more history is needed.\n\nproxy – requests proxy to use.\n\nReturns\n:\n\npd.DataFrame\n\nPrevious\n\nyfinance.Ticker.calendar\n\nNext\n\nyfinance.Ticker.earnings_dates\n\n On this page\nTicker.get_earnings_dates()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.calendar — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.calendar.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.calendar\nproperty Ticker.calendar: dict\n\nReturns a dictionary of events, earnings, and dividends for the ticker\n\nPrevious\n\nyfinance.Ticker.earnings\n\nNext\n\nyfinance.Ticker.get_earnings_dates\n\n On this page\nTicker.calendar\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.earnings — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.earnings.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.earnings\nproperty Ticker.earnings: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_earnings\n\nNext\n\nyfinance.Ticker.calendar\n\n On this page\nTicker.earnings\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_earnings — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_earnings.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.get_earnings\nTicker.get_earnings(proxy=None, as_dict=False, freq='yearly')\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nPrevious\n\nyfinance.Ticker.cashflow\n\nNext\n\nyfinance.Ticker.earnings\n\n On this page\nTicker.get_earnings()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.cashflow — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.cashflow.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.cashflow\nproperty Ticker.cashflow: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_cashflow\n\nNext\n\nyfinance.Ticker.get_earnings\n\n On this page\nTicker.cashflow\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_cashflow — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_cashflow.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.get_cashflow\nTicker.get_cashflow(proxy=None, as_dict=False, pretty=False, freq='yearly')\n\nPrevious\n\nyfinance.Ticker.balance_sheet\n\nNext\n\nyfinance.Ticker.cashflow\n\n On this page\nTicker.get_cashflow()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.balance_sheet — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.balance_sheet.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.balance_sheet\nproperty Ticker.balance_sheet: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_balance_sheet\n\nNext\n\nyfinance.Ticker.get_cashflow\n\n On this page\nTicker.balance_sheet\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_balance_sheet — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_balance_sheet.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.get_balance_sheet\nTicker.get_balance_sheet(proxy=None, as_dict=False, pretty=False, freq='yearly')\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\npretty: bool\n\nFormat row names nicely for readability Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nPrevious\n\nyfinance.Ticker.income_stmt\n\nNext\n\nyfinance.Ticker.balance_sheet\n\n On this page\nTicker.get_balance_sheet()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.income_stmt — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.income_stmt.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.income_stmt\nproperty Ticker.income_stmt: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_income_stmt\n\nNext\n\nyfinance.Ticker.get_balance_sheet\n\n On this page\nTicker.income_stmt\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_income_stmt — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_income_stmt.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nyfinance.Tic...\nyfinance.Ticker.get_income_stmt\nTicker.get_income_stmt(proxy=None, as_dict=False, pretty=False, freq='yearly')\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\npretty: bool\n\nFormat row names nicely for readability Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nPrevious\n\nFinancials\n\nNext\n\nyfinance.Ticker.income_stmt\n\n On this page\nTicker.get_income_stmt()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Financials — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.financials.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nyfinance.Ticker.get_income_stmt\nyfinance.Ticker.income_stmt\nyfinance.Ticker.get_balance_sheet\nyfinance.Ticker.balance_sheet\nyfinance.Ticker.get_cashflow\nyfinance.Ticker.cashflow\nyfinance.Ticker.get_earnings\nyfinance.Ticker.earnings\nyfinance.Ticker.calendar\nyfinance.Ticker.get_earnings_dates\nyfinance.Ticker.earnings_dates\nyfinance.Ticker.get_sec_filings\nyfinance.Ticker.sec_filings\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nFinancials\nFinancials\n\nget_income_stmt([proxy, as_dict, pretty, freq])\n\n\t\n\n\n\n\nincome_stmt\n\n\t\n\n\n\n\nget_balance_sheet([proxy, as_dict, pretty, freq])\n\n\t\n\n\n\n\nbalance_sheet\n\n\t\n\n\n\n\nget_cashflow([proxy, as_dict, pretty, freq])\n\n\t\n\n\n\n\ncashflow\n\n\t\n\n\n\n\nget_earnings([proxy, as_dict, freq])\n\n\t\n\n\n\n\nearnings\n\n\t\n\n\n\n\ncalendar\n\n\t\n\nReturns a dictionary of events, earnings, and dividends for the ticker\n\n\n\n\nget_earnings_dates([limit, proxy])\n\n\t\n\nGet earning dates (future and historic)\n\n\n\n\nearnings_dates\n\n\t\n\n\n\n\nget_sec_filings([proxy])\n\n\t\n\n\n\n\nsec_filings\n\n\t\n\nPrevious\n\nMarket\n\nNext\n\nyfinance.Ticker.get_income_stmt\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Market — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Market.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nMarket\nMarket\nMarket\nclass yfinance.Market(market: str, session=None, proxy=None, timeout=30)\n\nAttributes\n\nstatus\nsummary\n\nMethods\n\n__init__(market: str, session=None, proxy=None, timeout=30)\n\nPrevious\n\nMarket\n\nNext\n\nFinancials\n\n On this page\nMarket\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Market — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.market.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nMarket\nMarket\nClass\n\nThe Market class, allows you to access market data in a Pythonic way.\n\nMarket(market[, session, proxy, timeout])\n\n\t\n\nMarket Sample Code\nimport yfinance as yf\n\nEUROPE = yf.Market(\"EUROPE\")\n\nstatus = EUROPE.status\nsummary = EUROPE.summary\n\nMarkets\n\nThere are 8 different markets available in Yahoo Finance.\n\nUS\n\nGB\n\nASIA\n\nEUROPE\n\nRATES\n\nCOMMODITIES\n\nCURRENCIES\n\nCRYPTOCURRENCIES\n\nPrevious\n\nyfinance.Ticker.news\n\nNext\n\nMarket\n\n On this page\nClass\nMarket Sample Code\nMarkets\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.news — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.news.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Ticker.news\nyfinance.Ticker.news\nproperty Ticker.news: list\n\nPrevious\n\nyfinance.Ticker.get_news\n\nNext\n\nMarket\n\n On this page\nTicker.news\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_news — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_news.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_news\nTicker.get_news(count=10, tab='news', proxy=None) → list\n\nAllowed options for tab: “news”, “all”, “press releases\n\nPrevious\n\nyfinance.Ticker.fast_info\n\nNext\n\nyfinance.Ticker.news\n\n On this page\nTicker.get_news()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.fast_info — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.fast_info.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.fast_info\nproperty Ticker.fast_info\n\nPrevious\n\nyfinance.Ticker.get_fast_info\n\nNext\n\nyfinance.Ticker.get_news\n\n On this page\nTicker.fast_info\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_fast_info — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_fast_info.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_fast_info\nTicker.get_fast_info(proxy=None)\n\nPrevious\n\nyfinance.Ticker.info\n\nNext\n\nyfinance.Ticker.fast_info\n\n On this page\nTicker.get_fast_info()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.info — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.info.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Ticker.info\nyfinance.Ticker.info\nproperty Ticker.info: dict\n\nPrevious\n\nyfinance.Ticker.get_info\n\nNext\n\nyfinance.Ticker.get_fast_info\n\n On this page\nTicker.info\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_shares_full — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_shares_full.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_shares_full\nTicker.get_shares_full(start=None, end=None, proxy=None)\n\nPrevious\n\nyfinance.Ticker.capital_gains\n\nNext\n\nyfinance.Ticker.get_info\n\n On this page\nTicker.get_shares_full()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_info — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_info.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_info\nTicker.get_info(proxy=None) → dict\n\nPrevious\n\nyfinance.Ticker.get_shares_full\n\nNext\n\nyfinance.Ticker.info\n\n On this page\nTicker.get_info()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.capital_gains — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.capital_gains.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.capital_gains\nproperty Ticker.capital_gains: Series\n\nPrevious\n\nyfinance.Ticker.get_capital_gains\n\nNext\n\nyfinance.Ticker.get_shares_full\n\n On this page\nTicker.capital_gains\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_capital_gains — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_capital_gains.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_capital_gains\nTicker.get_capital_gains(proxy=None) → Series\n\nPrevious\n\nyfinance.Ticker.actions\n\nNext\n\nyfinance.Ticker.capital_gains\n\n On this page\nTicker.get_capital_gains()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.actions — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.actions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.actions\nproperty Ticker.actions: DataFrame\n\nPrevious\n\nyfinance.Ticker.get_actions\n\nNext\n\nyfinance.Ticker.get_capital_gains\n\n On this page\nTicker.actions\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_actions — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_actions.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_actions\nTicker.get_actions(proxy=None) → Series\n\nPrevious\n\nyfinance.Ticker.splits\n\nNext\n\nyfinance.Ticker.actions\n\n On this page\nTicker.get_actions()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.splits — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.splits.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.splits\nproperty Ticker.splits: Series\n\nPrevious\n\nyfinance.Ticker.get_splits\n\nNext\n\nyfinance.Ticker.get_actions\n\n On this page\nTicker.splits\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_splits — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_splits.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_splits\nTicker.get_splits(proxy=None) → Series\n\nPrevious\n\nyfinance.Ticker.dividends\n\nNext\n\nyfinance.Ticker.splits\n\n On this page\nTicker.get_splits()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.dividends — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.dividends.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.dividends\nproperty Ticker.dividends: Series\n\nPrevious\n\nyfinance.Ticker.get_dividends\n\nNext\n\nyfinance.Ticker.get_splits\n\n On this page\nTicker.dividends\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_dividends — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_dividends.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_dividends\nTicker.get_dividends(proxy=None) → Series\n\nPrevious\n\nyfinance.Ticker.get_history_metadata\n\nNext\n\nyfinance.Ticker.dividends\n\n On this page\nTicker.get_dividends()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_history_metadata — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_history_metadata.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_history_metadata\nTicker.get_history_metadata(proxy=None) → dict\n\nPrevious\n\nyfinance.Ticker.history\n\nNext\n\nyfinance.Ticker.get_dividends\n\n On this page\nTicker.get_history_metadata()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.history — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.history.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.history\nTicker.history(*args, **kwargs) → DataFrame\n\nPrevious\n\nyfinance.Ticker.isin\n\nNext\n\nyfinance.Ticker.get_history_metadata\n\n On this page\nTicker.history()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.isin — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.isin.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Ticker.isin\nyfinance.Ticker.isin\nproperty Ticker.isin\n\nPrevious\n\nyfinance.Ticker.get_isin\n\nNext\n\nyfinance.Ticker.history\n\n On this page\nTicker.isin\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance.Ticker.get_isin — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.get_isin.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nyfinance.Tic...\nyfinance.Ticker.get_isin\nTicker.get_isin(proxy=None) → str | None\n\nPrevious\n\nStock\n\nNext\n\nyfinance.Ticker.isin\n\n On this page\nTicker.get_isin()\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Stock — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.stock.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nyfinance.Ticker.get_isin\nyfinance.Ticker.isin\nyfinance.Ticker.history\nyfinance.Ticker.get_history_metadata\nyfinance.Ticker.get_dividends\nyfinance.Ticker.dividends\nyfinance.Ticker.get_splits\nyfinance.Ticker.splits\nyfinance.Ticker.get_actions\nyfinance.Ticker.actions\nyfinance.Ticker.get_capital_gains\nyfinance.Ticker.capital_gains\nyfinance.Ticker.get_shares_full\nyfinance.Ticker.get_info\nyfinance.Ticker.info\nyfinance.Ticker.get_fast_info\nyfinance.Ticker.fast_info\nyfinance.Ticker.get_news\nyfinance.Ticker.news\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nStock\nStock\nTicker stock methods\n\nget_isin([proxy])\n\n\t\n\n\n\n\nisin\n\n\t\n\n\n\n\nhistory(*args, **kwargs)\n\n\t\n\nSee also\n\nyfinance.scrapers.history.PriceHistory.history()\n\nDocumentation for history\n\nget_history_metadata([proxy])\n\n\t\n\n\n\n\nget_dividends([proxy])\n\n\t\n\n\n\n\ndividends\n\n\t\n\n\n\n\nget_splits([proxy])\n\n\t\n\n\n\n\nsplits\n\n\t\n\n\n\n\nget_actions([proxy])\n\n\t\n\n\n\n\nactions\n\n\t\n\n\n\n\nget_capital_gains([proxy])\n\n\t\n\n\n\n\ncapital_gains\n\n\t\n\n\n\n\nget_shares_full([start, end, proxy])\n\n\t\n\n\n\n\nget_info([proxy])\n\n\t\n\n\n\n\ninfo\n\n\t\n\n\n\n\nget_fast_info([proxy])\n\n\t\n\n\n\n\nfast_info\n\n\t\n\n\n\n\nget_news([count, tab, proxy])\n\n\t\n\nAllowed options for tab: \"news\", \"all\", \"press releases\n\n\n\n\nnews\n\n\t\n\nPrevious\n\nTickers\n\nNext\n\nyfinance.Ticker.get_isin\n\n On this page\nTicker stock methods\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Tickers — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Tickers.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nTicker\nTickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nTicker and Tickers\nTickers\nTickers\nclass yfinance.Tickers(tickers, session=None)\n\nMethods\n\n__init__(tickers, session=None)\ndownload(period='1mo', interval='1d', start=None, end=None, prepost=False, actions=True, auto_adjust=True, repair=False, proxy=None, threads=True, group_by='column', progress=True, timeout=10, **kwargs)\nhistory(period='1mo', interval='1d', start=None, end=None, prepost=False, actions=True, auto_adjust=True, repair=False, proxy=None, threads=True, group_by='column', progress=True, timeout=10, **kwargs)\nnews()\n\nPrevious\n\nTicker\n\nNext\n\nStock\n\n On this page\nTickers\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Ticker — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/api/yfinance.Ticker.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nTicker\nTickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nTicker and Tickers\nTicker\nTicker\nclass yfinance.Ticker(ticker, session=None, proxy=None)\n\nAttributes\n\nactions\nanalyst_price_targets\nbalance_sheet\nbalancesheet\nbasic_info\ncalendar\n\nReturns a dictionary of events, earnings, and dividends for the ticker\n\ncapital_gains\ncash_flow\ncashflow\ndividends\nearnings\nearnings_dates\nearnings_estimate\nearnings_history\neps_revisions\neps_trend\nfast_info\nfinancials\nfunds_data\ngrowth_estimates\nhistory_metadata\nincome_stmt\nincomestmt\ninfo\ninsider_purchases\ninsider_roster_holders\ninsider_transactions\ninstitutional_holders\nisin\nmajor_holders\nmutualfund_holders\nnews\noptions\nquarterly_balance_sheet\nquarterly_balancesheet\nquarterly_cash_flow\nquarterly_cashflow\nquarterly_earnings\nquarterly_financials\nquarterly_income_stmt\nquarterly_incomestmt\nrecommendations\nrecommendations_summary\nrevenue_estimate\nsec_filings\nshares\nsplits\nsustainability\nupgrades_downgrades\n\nMethods\n\n__init__(ticker, session=None, proxy=None)\nget_actions(proxy=None) → Series\nget_analyst_price_targets(proxy=None) → dict\n\nKeys: current low high mean median\n\nget_balance_sheet(proxy=None, as_dict=False, pretty=False, freq='yearly')\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\npretty: bool\n\nFormat row names nicely for readability Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nget_balancesheet(proxy=None, as_dict=False, pretty=False, freq='yearly')\nget_calendar(proxy=None) → dict\nget_capital_gains(proxy=None) → Series\nget_cash_flow(proxy=None, as_dict=False, pretty=False, freq='yearly') → DataFrame | dict\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\npretty: bool\n\nFormat row names nicely for readability Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nget_cashflow(proxy=None, as_dict=False, pretty=False, freq='yearly')\nget_dividends(proxy=None) → Series\nget_earnings(proxy=None, as_dict=False, freq='yearly')\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nget_earnings_dates(limit=12, proxy=None) → DataFrame | None\n\nGet earning dates (future and historic)\n\nParameters\n:\n\nlimit (int) – max amount of upcoming and recent earnings dates to return. Default value 12 should return next 4 quarters and last 8 quarters. Increase if more history is needed.\n\nproxy – requests proxy to use.\n\nReturns\n:\n\npd.DataFrame\n\nget_earnings_estimate(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: numberOfAnalysts avg low high yearAgoEps growth\n\nget_earnings_history(proxy=None, as_dict=False)\n\nIndex: pd.DatetimeIndex Columns: epsEstimate epsActual epsDifference surprisePercent\n\nget_eps_revisions(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: upLast7days upLast30days downLast7days downLast30days\n\nget_eps_trend(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: current 7daysAgo 30daysAgo 60daysAgo 90daysAgo\n\nget_fast_info(proxy=None)\nget_financials(proxy=None, as_dict=False, pretty=False, freq='yearly')\nget_funds_data(proxy=None) → FundsData | None\nget_growth_estimates(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y +5y -5y Columns: stock industry sector index\n\nget_history_metadata(proxy=None) → dict\nget_income_stmt(proxy=None, as_dict=False, pretty=False, freq='yearly')\nParameters\n:\nas_dict: bool\n\nReturn table as Python dict Default is False\n\npretty: bool\n\nFormat row names nicely for readability Default is False\n\nfreq: str\n\n“yearly” or “quarterly” Default is “yearly”\n\nproxy: str\n\nOptional. Proxy server URL scheme Default is None\n\nget_incomestmt(proxy=None, as_dict=False, pretty=False, freq='yearly')\nget_info(proxy=None) → dict\nget_insider_purchases(proxy=None, as_dict=False)\nget_insider_roster_holders(proxy=None, as_dict=False)\nget_insider_transactions(proxy=None, as_dict=False)\nget_institutional_holders(proxy=None, as_dict=False)\nget_isin(proxy=None) → str | None\nget_major_holders(proxy=None, as_dict=False)\nget_mutualfund_holders(proxy=None, as_dict=False)\nget_news(count=10, tab='news', proxy=None) → list\n\nAllowed options for tab: “news”, “all”, “press releases\n\nget_recommendations(proxy=None, as_dict=False)\n\nReturns a DataFrame with the recommendations Columns: period strongBuy buy hold sell strongSell\n\nget_recommendations_summary(proxy=None, as_dict=False)\nget_revenue_estimate(proxy=None, as_dict=False)\n\nIndex: 0q +1q 0y +1y Columns: numberOfAnalysts avg low high yearAgoRevenue growth\n\nget_sec_filings(proxy=None) → dict\nget_shares(proxy=None, as_dict=False) → DataFrame | dict\nget_shares_full(start=None, end=None, proxy=None)\nget_splits(proxy=None) → Series\nget_sustainability(proxy=None, as_dict=False)\nget_upgrades_downgrades(proxy=None, as_dict=False)\n\nReturns a DataFrame with the recommendations changes (upgrades/downgrades) Index: date of grade Columns: firm toGrade fromGrade action\n\nhistory(*args, **kwargs) → DataFrame\noption_chain(date=None, tz=None)\nproperty calendar: dict\n\nReturns a dictionary of events, earnings, and dividends for the ticker\n\nPrevious\n\nTicker and Tickers\n\nNext\n\nTickers\n\n On this page\nTicker\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Ticker and Tickers — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/yfinance.ticker_tickers.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nTicker\nTickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nTicker and Tickers\nTicker and Tickers\nClass\n\nThe Ticker module, allows you to access ticker data in a Pythonic way.\n\nTicker(ticker[, session, proxy])\n\n\t\n\n\n\n\nTickers(tickers[, session])\n\n\t\n\nTicker Sample Code\n\nThe Ticker module, allows you to access ticker data in a Pythonic way.\n\nimport yfinance as yf\n\ndat = yf.Ticker(\"MSFT\")\n\n# get historical market data\ndat.history(period='1mo')\n\n# options\ndat.option_chain(dat.options[0]).calls\n\n# get financials\ndat.balance_sheet\ndat.quarterly_income_stmt\n\n# dates\ndat.calendar\n\n# general info\ndat.info\n\n# analysis\ndat.analyst_price_targets\n\n\nTo initialize multiple Ticker objects, use\n\nimport yfinance as yf\n\ntickers = yf.Tickers('msft aapl goog')\n\n# access each ticker using (example)\ntickers.tickers['MSFT'].info\ntickers.tickers['AAPL'].history(period=\"1mo\")\ntickers.tickers['GOOG'].actions\n\n\nFor tickers that are ETFs/Mutual Funds, Ticker.funds_data provides access to fund related data.\n\nFunds’ Top Holdings and other data with category average is returned as pd.DataFrame.\n\nimport yfinance as yf\nspy = yf.Ticker('SPY')\ndata = spy.funds_data\n\n# show fund description\ndata.description\n\n# show operational information\ndata.fund_overview\ndata.fund_operations\n\n# show holdings related information\ndata.asset_classes\ndata.top_holdings\ndata.equity_holdings\ndata.bond_holdings\ndata.bond_ratings\ndata.sector_weightings\n\n\nIf you want to use a proxy server for downloading data, use:\n\nimport yfinance as yf\n\nmsft = yf.Ticker(\"MSFT\")\n\nmsft.history(..., proxy=\"PROXY_SERVER\")\nmsft.get_actions(proxy=\"PROXY_SERVER\")\nmsft.get_dividends(proxy=\"PROXY_SERVER\")\nmsft.get_splits(proxy=\"PROXY_SERVER\")\nmsft.get_capital_gains(proxy=\"PROXY_SERVER\")\nmsft.get_balance_sheet(proxy=\"PROXY_SERVER\")\nmsft.get_cashflow(proxy=\"PROXY_SERVER\")\nmsft.option_chain(..., proxy=\"PROXY_SERVER\")\n...\n\n\nTo initialize multiple Ticker objects, use Tickers module\n\nimport yfinance as yf\n\ntickers = yf.Tickers('msft aapl goog')\n\n# access each ticker using (example)\ntickers.tickers['MSFT'].info\ntickers.tickers['AAPL'].history(period=\"1mo\")\ntickers.tickers['GOOG'].actions\n\n\nPrevious\n\nAPI Reference\n\nNext\n\nTicker\n\n On this page\nClass\nTicker Sample Code\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/advanced/index.rst.txt",
    "html": "========\nAdvanced\n========\n\n.. toctree::\n   :maxdepth: 2\n\n   logging\n   proxy\n   caching\n   multi_level_columns"
  },
  {
    "title": "Multi-Level Column Index — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/advanced/multi_level_columns.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nLogging\nProxy Server\nCaching\nMulti-Level Column Index\nAdvanced\nMulti-Level...\nMulti-Level Column Index\n\nThe following answer on Stack Overflow is for How to deal with multi-level column names downloaded with yfinance?\n\nyfinance returns a pandas.DataFrame with multi-level column names, with a level for the ticker and a level for the stock price data\n\nThe answer discusses:\n\nHow to correctly read the the multi-level columns after saving the dataframe to a csv with pandas.DataFrame.to_csv\n\nHow to download single or multiple tickers into a singledataframe with single level column names and a ticker column\n\nPrevious\n\nCaching\n\nNext\n\nAPI Reference\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Caching — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/advanced/caching.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nLogging\nProxy Server\nCaching\nMulti-Level Column Index\nAdvanced\nCaching\nCaching\nSmarter Scraping\n\nInstall the nospam package to cache API calls and reduce spam to Yahoo:\n\npip install yfinance[nospam]\n\n\nTo use a custom requests session, pass a session= argument to the Ticker constructor. This allows for caching calls to the API as well as a custom way to modify requests via the User-agent header.\n\nimport requests_cache\nsession = requests_cache.CachedSession('yfinance.cache')\nsession.headers['User-agent'] = 'my-program/1.0'\nticker = yf.Ticker('MSFT', session=session)\n\n# The scraped response will be stored in the cache\nticker.actions\n\n\nCombine requests_cache with rate-limiting to avoid triggering Yahoo’s rate-limiter/blocker that can corrupt data.\n\nfrom requests import Session\nfrom requests_cache import CacheMixin, SQLiteCache\nfrom requests_ratelimiter import LimiterMixin, MemoryQueueBucket\nfrom pyrate_limiter import Duration, RequestRate, Limiter\nclass CachedLimiterSession(CacheMixin, LimiterMixin, Session):\n   pass\n\nsession = CachedLimiterSession(\n   limiter=Limiter(RequestRate(2, Duration.SECOND*5)),  # max 2 requests per 5 seconds\n   bucket_class=MemoryQueueBucket,\n   backend=SQLiteCache(\"yfinance.cache\"),\n)\n\nPersistent Cache\n\nTo reduce Yahoo, yfinance store some data locally: timezones to localize dates, and cookie. Cache location is:\n\nWindows = C:/Users/<USER>/AppData/Local/py-yfinance\n\nLinux = /home/<USER>/.cache/py-yfinance\n\nMacOS = /Users/<USER>/Library/Caches/py-yfinance\n\nYou can direct cache to use a different location with set_tz_cache_location:\n\nimport yfinance as yf\nyf.set_tz_cache_location(\"custom/cache/location\")\n\n\nPrevious\n\nProxy Server\n\nNext\n\nMulti-Level Column Index\n\n On this page\nSmarter Scraping\nPersistent Cache\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Proxy Server — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/advanced/proxy.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nLogging\nProxy Server\nCaching\nMulti-Level Column Index\nAdvanced\nProxy Server\nProxy Server\n\nYou can download data via a proxy:\n\nmsft = yf.Ticker(\"MSFT\")\nmsft.history(..., proxy=\"PROXY_SERVER\")\n\n\nPrevious\n\nLogging\n\nNext\n\nCaching\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Logging — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/advanced/logging.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nLogging\nProxy Server\nCaching\nMulti-Level Column Index\nAdvanced\nLogging\nLogging\n\nyfinance uses the logging module to handle messages. By default, only errors are logged.\n\nIf debugging, you can switch to debug mode with custom formatting using:\n\nimport yfinance as yf\nyf.enable_debug_mode()\n\n\nPrevious\n\nAdvanced\n\nNext\n\nProxy Server\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "",
    "url": "https://ranaroussi.github.io/yfinance/_sources/index.rst.txt",
    "html": "yfinance documentation\n======================\n\nDownload Market Data from Yahoo! Finance's API\n----------------------------------------------\n\n.. admonition:: IMPORTANT LEGAL DISCLAIMER\n\n   **Yahoo!, Y!Finance, and Yahoo! finance are registered trademarks of Yahoo, Inc.**\n\n   yfinance is **not** affiliated, endorsed, or vetted by Yahoo, Inc. It's\n   an open-source tool that uses Yahoo's publicly available APIs, and is\n   intended for research and educational purposes.\n\n   **You should refer to Yahoo!'s terms of use**\n   (`here <https://policies.yahoo.com/us/en/yahoo/terms/product-atos/apiforydn/index.htm>`__),\n   (`here <https://legal.yahoo.com/us/en/yahoo/terms/otos/index.html>`__),\n   and (`here <https://policies.yahoo.com/us/en/yahoo/terms/index.htm>`__)\n   for details on your rights to use the actual data downloaded.\n   Remember - the Yahoo! finance API is intended for personal use only.\n\nInstall\n-------\n\n.. code-block:: bash\n\n    $ pip install yfinance\n\nQuick start\n-----------\n\nShowing a small sample of yfinance API, the full API is much bigger and covered in :doc:`reference/index`.\n\n.. code-block:: python\n\n   import yfinance as yf\n   dat = yf.Ticker(\"MSFT\")\n\n\nOne ticker symbol\n\n.. code-block:: python\n\n   dat = yf.Ticker(\"MSFT\")\n   dat.info\n   dat.calendar\n   dat.analyst_price_targets\n   dat.quarterly_income_stmt\n   dat.history(period='1mo')\n   dat.option_chain(dat.options[0]).calls\n\nMultiple ticker symbols\n\n.. code-block:: python\n\n   tickers = yf.Tickers('MSFT AAPL GOOG')\n   tickers.tickers['MSFT'].info\n   yf.download(['MSFT', 'AAPL', 'GOOG'], period='1mo')\n\nFunds\n\n.. code-block:: python\n\n   spy = yf.Ticker('SPY').funds_data\n   spy.description\n   spy.top_holdings\n\n.. toctree::\n   :maxdepth: 1\n   :titlesonly:\n\n   advanced/index\n   reference/index\n   development/index\n"
  },
  {
    "title": "Development — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/development/index.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nContributiong to yfinance\nContribution to the documentation\nReporting a Bug\nDevelopment\nDevelopment\nContributiong to yfinance\nContribution to the documentation\nReporting a Bug\n\nPrevious\n\nPriceHistory class\n\nNext\n\nContributiong to yfinance\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "API Reference — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/reference/index.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nTicker and Tickers\nStock\nMarket\nFinancials\nAnalysis & Holdings\nMarket\nSearch & News\nSector and Industry\nScreener & Query\nFunctions and Utilities\nFundsData class\nPriceHistory class\nAPI Reference\nAPI Reference\nOverview\n\nThe yfinance package provides easy access to Yahoo! Finance’s API to retrieve market data. It includes classes and functions for downloading historical market data, accessing ticker information, managing cache, and more.\n\nPublic API\n\nThe following are the publicly available classes, and functions exposed by the yfinance package:\n\nTicker: Class for accessing single ticker data.\n\nTickers: Class for handling multiple tickers.\n\nMarket: Class for accessing market summary.\n\ndownload: Function to download market data for multiple tickers.\n\nSearch: Class for accessing search results.\n\nSector: Domain class for accessing sector information.\n\nIndustry: Domain class for accessing industry information.\n\nMarket: Class for accessing market status & summary.\n\nEquityQuery: Class to build equity query filters.\n\nFundQuery: Class to build fund query filters.\n\nscreen: Run equity/fund queries.\n\nenable_debug_mode: Function to enable debug mode for logging.\n\nset_tz_cache_location: Function to set the timezone cache location.\n\nPrevious\n\nMulti-Level Column Index\n\nNext\n\nTicker and Tickers\n\n On this page\nOverview\nPublic API\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "Advanced — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/advanced/index.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nLogging\nProxy Server\nCaching\nMulti-Level Column Index\nAdvanced\nAdvanced\nLogging\nProxy Server\nCaching\nSmarter Scraping\nPersistent Cache\nMulti-Level Column Index\n\nPrevious\n\nyfinance documentation\n\nNext\n\nLogging\n\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  },
  {
    "title": "yfinance documentation — yfinance",
    "url": "https://ranaroussi.github.io/yfinance/index.html",
    "html": "Skip to main content\n\nyfinance\n\nAdvanced\nAPI Reference\nDevelopment\nSearch\n⌘\n+\nK\nGitHub\nyfinance documentation\nDownload Market Data from Yahoo! Finance’s API\n\nIMPORTANT LEGAL DISCLAIMER\n\nYahoo!, Y!Finance, and Yahoo! finance are registered trademarks of Yahoo, Inc.\n\nyfinance is not affiliated, endorsed, or vetted by Yahoo, Inc. It’s an open-source tool that uses Yahoo’s publicly available APIs, and is intended for research and educational purposes.\n\nYou should refer to Yahoo!’s terms of use (here), (here), and (here) for details on your rights to use the actual data downloaded. Remember - the Yahoo! finance API is intended for personal use only.\n\nInstall\n$ pip install yfinance\n\nQuick start\n\nShowing a small sample of yfinance API, the full API is much bigger and covered in API Reference.\n\nimport yfinance as yf\ndat = yf.Ticker(\"MSFT\")\n\n\nOne ticker symbol\n\ndat = yf.Ticker(\"MSFT\")\ndat.info\ndat.calendar\ndat.analyst_price_targets\ndat.quarterly_income_stmt\ndat.history(period='1mo')\ndat.option_chain(dat.options[0]).calls\n\n\nMultiple ticker symbols\n\ntickers = yf.Tickers('MSFT AAPL GOOG')\ntickers.tickers['MSFT'].info\nyf.download(['MSFT', 'AAPL', 'GOOG'], period='1mo')\n\n\nFunds\n\nspy = yf.Ticker('SPY').funds_data\nspy.description\nspy.top_holdings\n\nAdvanced\nAPI Reference\nDevelopment\n\nNext\n\nAdvanced\n\n On this page\nDownload Market Data from Yahoo! Finance’s API\nInstall\nQuick start\n Show Source\n\n© Copyright 2017-2019 Ran Aroussi.\n\n\nCreated using Sphinx 8.0.2.\n\n\nBuilt with the PyData Sphinx Theme 0.15.4."
  }
]